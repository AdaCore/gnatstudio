+R Abstract_Type_Declarations
+R Anonymous_Arrays
+R Anonymous_Subtypes
+R Blocks

+R Boolean_Relational_Operators
--  Flag each call to a predefined relational operator
--  (‘<’, ‘>’, ‘<=’, ‘>=’, ‘=’ and ‘/=’) for the predefined Boolean type.

+R Complex_Inlined_Subprograms : 3
--  Flag a subprogram (or generic subprogram, or instantiation of a
--  subprogram) if pragma Inline is applied to it and at least one of the
--  following conditions is met:
--  * it contains at least one complex declaration such as a subprogram
--     body, package, task, protected declaration, or a generic instantiation
--     (except instantiation of Ada.Unchecked_Conversion);
--  *  it contains at least one complex statement such as a loop, a case or
--     an if statement;
--  *  the number of statements exceeds 3

+R Controlled_Type_Declarations

+R Deep_Inheritance_Hierarchies : 5
--  Flag a tagged derived type declaration or an interface type declaration
--  if its depth (in its inheritance hierarchy) exceeds 5

+R Deeply_Nested_Generics : 3
--  Flag a generic declaration nested in another generic declaration if the
--  nesting level of the inner generic exceeds 3

+R Identifier_Casing : Others = mixed
--  Flag any defining identifier if it casing does not follow the rules: the
--  first letter and every letter after underscore are uppercase, all the
--  other lettres are lowercase

+R Identifier_Suffixes : Type_Suffix         = _Type
+R Identifier_Suffixes : Access_Suffix       = _Access_Type
+R Identifier_Suffixes : Class_Access_Suffix = _Class_Type
--  Flag any defining identifier if it corresponds to the given kind of
--  entities but does not have a specified suffix

+R Identifier_Prefixes : Type = T_,
                         Access = A_,
                         constant = C_
--  Flag any defining identifier if it corresponds to the given kind of
--  entities but does not have a specified prefix

+R Non_Qualified_Aggregates
+R Non_Short_Circuit_Operators

+R OTHERS_In_Aggregates
+R OTHERS_In_CASE_Statements
+R OTHERS_In_Exception_Handlers

+R Warnings:km
--  Include warnings generated by the compiler with '-gnatwk' (variables that
--  could be constants) and '-gnatwm' (modified but unreferenced variables)
--  into generated gnatcheck report

+R Style_Checks: u
+R Style_Checks: O
--  Include warnings generated by the compiler style checks '-gnatyu'
--  (unnecessary blank lines) and '-gnatyO' (overriding subprograms are
--  not explicitly marked as such.) into generated gnatcheck report

+R Restrictions: No_Allocators,
                 No_Tasking
+R Restrictions : No_Dependence => Ada.Containers
--  Include warnings generated by the compiler with the specified restrictions
--  into generated gnatcheck report
