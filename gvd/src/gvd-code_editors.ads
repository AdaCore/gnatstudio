------------------------------------------------------------------------------
--                                  G P S                                   --
--                                                                          --
--                     Copyright (C) 2000-2016, AdaCore                     --
--                                                                          --
-- This is free software;  you can redistribute it  and/or modify it  under --
-- terms of the  GNU General Public License as published  by the Free Soft- --
-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
-- sion.  This software is distributed in the hope  that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License for  more details.  You should have  received  a copy of the GNU --
-- General  Public  License  distributed  with  this  software;   see  file --
-- COPYING3.  If not, go to http://www.gnu.org/licenses for a complete copy --
-- of the license.                                                          --
------------------------------------------------------------------------------

--  This package provides various utilities to interface the debugger with
--  editors.
--
--  Caches
--  =======
--
--  Some data is expensive to recompute for each file (e.g the list of lines
--  that contain code). We have thus implemented a system of caches so that
--  we don't need to recompute this data every time the file is reloaded.
--  This information is also computed in a lazy fashion, ie while nothing
--  else is happening in the application.

with GVD.Types;
with GNATCOLL.VFS;
with GPS.Debuggers;            use GPS.Debuggers;
with GPS.Kernel;               use GPS.Kernel;
with GPS.Kernel.Style_Manager; use GPS.Kernel.Style_Manager;

package GVD.Code_Editors is

   type Code_Editor_Record is tagged private;
   type Code_Editor is access all Code_Editor_Record'Class;

   procedure Gtk_New
     (Editor      : out Code_Editor;
      Kernel      : not null access Kernel_Handle_Record'Class;
      Process     : not null access Base_Visual_Debugger'Class);
   --  Create a new editor window.
   --  The name and the parameters are chosen so that this type is compatible
   --  with the code generated by Gate for a Gtk_Box.

   procedure Show_Message
     (Editor      : access Code_Editor_Record;
      Message     : String);
   --  Display a message in the editor window.

   procedure Set_Current_File_And_Line
     (Editor : not null access Code_Editor_Record;
      File   : GNATCOLL.VFS.Virtual_File;
      Line   : Natural);
   function Get_Current_File
     (Editor : access Code_Editor_Record) return GNATCOLL.VFS.Virtual_File;
   function Get_Line (Editor : access Code_Editor_Record) return Natural;
   --  Set or get the file and line which the debugger is stopped at.

   procedure Update_Breakpoints
     (Editor    : access Code_Editor_Record;
      Br        : GVD.Types.Breakpoint_Array);
   --  Change the list of breakpoints to highlight in the editor (source and
   --  assembly editors).
   --  All the breakpoints that previously existed are removed from the screen,
   --  and replaced by the new ones.
   --  The breakpoints that do not apply to the current file are ignored.

   procedure Free_Debug_Info (Editor : access Code_Editor_Record);
   --  Free dynamic memory associated to Editor, relative to debugger
   --  information.

   procedure Highlight_Current_Line
     (Editor  : not null access Code_Editor_Record);
   procedure Unhighlight_Current_Line
     (Editor  : not null access Code_Editor_Record);
   --  Unhighlight the current line in the editor if it is highlighted.
   --  Do nothing otherwise.

private

   type Code_Editor_Record is tagged record
      Kernel       : access Kernel_Handle_Record'Class;
      Process      : access Base_Visual_Debugger'Class;

      Current_Breakpoints : GVD.Types.Breakpoint_Array_Ptr;
      --  This array contains the currently set breakpoints in the
      --  File.
      --  Entries in this array may be set to 0, in order to avoid
      --  necessity to reallocate it every time the set of breakpoints
      --  is updated.

      Current_File        : GNATCOLL.VFS.Virtual_File;
      Current_Line        : Natural := 0;
      --  The file/line on which the debugger is stopped (ie these were set
      --  when the Set_Current parameter is True for Set_line and Load_File)

      Current_Line_Style  : Style_Access;
      --  style used for highlighting the current line
   end record;

end GVD.Code_Editors;
