
# Location of GNAT sources. See the README file at the top-level for
# information on how to setup the required links
GNAT_SRC=../../gnat/

# List of C files to compile
C_FILES=pixmaps.c

# Main file(s) to compile
MAIN=lib_make



# List of files automatically generated by GLADE, that won't compile with
# style checks on.
NO_STYLE_FILES=${wildcard *_pkg.adb} sdefault.adb

# Including the gnat runtime. This must be found before the gnat sources on the
# path, or the binder will complain that sources are more recent than objects
RUNTIME_HEAD=${shell gnatls -v | grep "gcc-lib" | head -1}
RUNTIME_INC=${RUNTIME_HEAD:%=-aI%}

CFLAGS=-g
GTKADA_FLAGS=`gtkada-config`
GNATBIND_FLAGS=-bargs -E
GNATMAKE_FLAGS=-gnata -gnatQ -m ${CFLAGS}
STYLE_FLAGS=-gnaty -gnatwu

INCLUDES=-aI../../common -aI../src ${RUNTIME_INC} -aI${GNAT_SRC}
ALL_FLAGS=${GNATMAKE_FLAGS} ${INCLUDES} ${GTKADA_FLAGS} ${GNATBIND_FLAGS}

.PHONY: all force check_modules clean

all: ${MAIN}

${MAIN}: check_modules ${NO_STYLE_FILES} ${C_FILES:%.c=../obj/%.o} force
	cd ../obj; gnatmake $@ ${STYLE_FLAGS} ${ALL_FLAGS}

${NO_STYLE_FILES}: force
	@cd ../obj; gnatmake -u $@ ${ALL_FLAGS}

../obj/%.o: %.c
	cd ../obj; gcc -c ../src/$< -I../src

# Check that the modules we depend on are available through links
check_modules: check_gnat

check_gnat: force
	@[ -f ${GNAT_SRC}/prj.ads ] || \
	   (echo "GNAT sources not found in ${GNAT_SRC}, see README"; false)

# Clean up all object files
clean: force
	cd ../obj; ${RM} b~* *.o *.ali core ${MAIN}

force:
