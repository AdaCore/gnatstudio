ADC_REVISION($Revision$)
AC_INIT(gps/src/gps-main.adb)

AC_CANONICAL_SYSTEM

GPS_VERSION=4.2.0w
STRIP_CR=False
CAN_OUTPUT=True
TARGET_CFLAGS=""
TARGET_LFLAGS=""
EXEC_COMMAND="xterm -e"
DEFAULT_FONT="sans 9"
PATH_STYLE=UNIX
SSH_ESCAPE='~'

## We need to double the quotes here, since this is inserted in an Ada file
DEFAULT_PS='sh -c """"""ps x 2> /dev/null || ps -u \$USER 2> /dev/null || ps""""""'

PRINT_CMD="lp"
OPAQUE_MDI=False
HOST_TYPE=Unix
PYTHON_LIBS=""
DIFF_CMD="diff"
PATCH_CMD="patch"
EXECUTION_WINDOW=True

TARGET=$host
EXEC_PREFIX="$prefix"

######## Check XML/Ada

PROJECT_PATH=`gnatls -v | tr -d '\015' | awk 'BEGIN {display=0} /<Current/ {next} {if (display) {printf "%s:", $1}} /Project Search Path/ {display=1}'`
AC_CHECK_PROG(XMLADA_GPR, xmlada.gpr, "with_xmlada", "no_xmlada", $PROJECT_PATH)
IFS=' '

######## checking for local tools ###
AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PATH_GNAT
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_CHECK_PROGS(DVIPS, dvips)
AC_CHECK_PROGS(MAKEINFO, makeinfo)
AC_CHECK_PROGS(TEXI2DVI, texi2dvi)

######### checking for gtk
AM_PATH_GTK
AM_PATH_GTKADA(2.4.0,,AC_MSG_ERROR(Test for GtkAda failed. See the file 'INSTALL' for help.))

######### checking for python (needs to be done after gtk)
AM_PATH_PYTHON
AM_PATH_PYGTK(2.8)
AM_TO_GPR($PYTHON_LIBS,   PYTHON_LIBS_GPR)
AM_TO_GPR($PYTHON_CFLAGS, PYTHON_CFLAGS_GPR)
AM_TO_GPR($PYGTK_INCLUDE, PYGTK_INCLUDE_GPR)
AM_TO_GPR($GTK_GCC_FLAGS, GTK_GCC_FLAGS_GPR)

######### Configuration for gnatlib
AM_PATH_SYSLOG

######## GNU regex checking
AC_CHECK_FUNC(re_compile_pattern, AC_DEFINE(HAVE_GNU_REGEX))

######## Support for ptys ###
AC_CHECK_HEADERS(sys/stropts.h)
AC_CHECK_FUNCS(getpt)
AC_CHECK_FUNCS(grantpt)
AC_CHECK_FUNCS(unlockpt)

AC_CHECK_LIB(util,openpty,
 [AC_DEFINE(HAVE_OPENPTY) TARGET_LFLAGS="$TARGET_LFLAGS -lutil"],
 [AC_CHECK_LIB(bsd,openpty,
  [AC_DEFINE(HAVE_OPENPTY) TARGET_LFLAGS="$TARGET_LFLAGS -lbsd"],
  [AC_CHECK_FUNCS(openpty)]
 ])
)

AC_CHECK_FUNCS(_getpty)
AC_CHECK_FUNCS(ptsname)
AC_CHECK_FUNCS(setpgid)
AC_CHECK_FUNCS(setsid)
AC_CHECK_FUNCS(sigprocmask)

opsys=''

case "${host}" in

  ## Alpha (DEC) machines.
  alpha*-dec-osf* )
    machine=alpha opsys=osf1
    EXECUTION_WINDOW=False
  ;;

  ## HP 9000 series 700 and 800, running HP/UX
  hppa*-hp-hpux1[[0-9]]* )
    machine=hp800 opsys=hpux10
  ;;

  mips-sgi-irix6.5* )
    machine=iris4d opsys=irix6-5
  ;;
  mips-sgi-irix6* )
    machine=iris4d opsys=irix6-0
  ;;

  ## IBM, AIX machines
  powerpc-ibm-aix5.*  )
    machine=ibmrs6000 opsys=aix4-2
    TARGET_LFLAGS="$TARGET_LFLAGS -Wl,-bbigtoc"
  ;;

  ## PowerPC
  powerpc-*-linux-gnu )
    machine=powerpc opsys=gnu-linux
    PRINT_CMD="a2ps"
  ;;

  powerpc-*-darwin* )
    machine=powerpc opsys=darwin
    STRIP_CR=True
  ;;

  ## Suns
  *-auspex-sunos* | *-sun-sunos* | *-sun-bsd* | *-sun-solaris* \
    | i[[3456]]86-*-solaris2* | i[3456]86-*-sunos5* | powerpc*-*-solaris2* \
    | rs6000-*-solaris2* | sparc*-linux*-gnu )
    case "${host}" in
      m68*-sunos1* )    machine=sun1 ;;
      m68*-sunos2* )    machine=sun2 ;;
      m68* )            machine=sun3 ;;
      i[[3456]]86-sun-sunos[[34]]* )        machine=sun386 ;;
      i[[3456]]86-*-* )     machine=intel386 ;;
      powerpcle* )      machine=powerpcle ;;
      powerpc* | rs6000* )  machine=ibmrs6000 ;;
      sparc* )          machine=sparc ;;
      * )               unported=yes ;;
    esac
    case "${host}" in
      ## The Sun386 didn't get past 4.0.
      i[[3456]]86-*-sunos4          ) opsys=sunos4-0 ;;
      *-sunos4.0*         ) opsys=sunos4-0 ;;
      *-sunos4.1.[[3-9]]*noshare )
                opsys=sunos413
                ;;
      *-sunos4.1.[[3-9]]* | *-sunos4shr*)
                opsys=sunos4shr
                ;;
      *-sunos4* | *-sunos )
                opsys=sunos4-1
                ;;
      *-sunos5.3* | *-solaris2.3* )
                opsys=sol2-3
                ;;
      *-sunos5.4* | *-solaris2.4* )
                opsys=sol2-4
                ;;
      *-sunos5.5* | *-solaris2.5* )
		TARGET_LFLAGS="$TARGET_LFLAGS -lXrender"
                opsys=sol2-5
                ;;
      *-sunos5* | *-solaris* )
		TARGET_LFLAGS="$TARGET_LFLAGS -lXrender"
                opsys=sol2-5
                ;;
      *-linux-gnu* )
  	        opsys=gnu-linux
		PRINT_CMD="a2ps"
		;;
      *) opsys=bsd4-2   ;;
    esac;;

  # IA64 processors
  ia64-*-* )
    case "${host}" in
      *-linux-gnu* )
	opsys=gnu-linux
	PRINT_CMD="a2ps"
        ;;
      *-hp-hpux11* )
        opsys=hpux10
        ;;
    esac
  ;;

  # AMD64 processors
  x86_64-*-* )
    case "${host}" in
      *-linux-gnu* )
        opsys=gnu-linux
	PRINT_CMD="a2ps"
        ;;
    esac
  ;;

  ## Intel 386 machines where we don't care about the manufacturer
  i[[3456]]86-*-* )
    machine=intel386
    case "${host}" in
      *-lynxos* )               opsys=lynxos ;;
      *-isc1.* | *-isc2.[[01]]* ) opsys=386-ix ;;
      *-isc2.2* )               opsys=isc2-2 ;;
      *-isc4.0* )               opsys=isc4-0 ;;
      *-isc4.* )                opsys=isc4-1 ;;
      *-isc* )                  opsys=isc3-0 ;;
      *-esix5* )                opsys=esix5r4 ;;
      *-esix* )                 opsys=esix ;;
      *-xenix* )                opsys=xenix ;;
      *-linux-gnu* )
	opsys=gnu-linux
	PRINT_CMD="a2ps"
	;;

      *-sco3.2v4* )             opsys=sco4  ;;
      *-sco3.2v5* )             opsys=sco5 ;;
      *-sysv4.2uw* | *-sysv5uw* ) opsys=unixware ;;
      *-386bsd* )               opsys=386bsd ;;
      *-freebsd* )              opsys=freebsd ;;
      *-nextstep* )             opsys=nextstep ;;
      *win32* | *mingw32* | *cygwin* )
	machine=intel386 opsys=windows
	STRIP_CR=True
	CAN_OUTPUT=False
	TARGET_LFLAGS="$TARGET_LFLAGS -luser32 -lcomdlg32 -mwindows -Wl,--stack=0x8000000"
	TARGET=pentium-mingw32msv
	COLOR_SELECTION="#BEBEBE"
	EXEC_COMMAND="cmd /c start"
	DEFAULT_PS="winps"
	DEFAULT_FONT="tahoma 8"
	PRINT_CMD=""
	DIFF_CMD="gnudiff"
	PATCH_CMD="patch"
	OPAQUE_MDI=True
	HOST_TYPE=Windows
	PATH_STYLE=CYGWIN
	SSH_ESCAPE=\'~\'
	;;

      *-darwin* )
        opsys=darwin
        STRIP_CR=True
        ;;

      ## Otherwise, we'll fall through to the generic opsys code at the bottom.
    esac
  ;;

  *) echo "Unknown system: ${host}"
     exit;;
esac

machfile="'\"machine/${machine}.h\"'"
opsysfile="\\\"system/${opsys}.h\\\""

# Set the version number of GPS/GVD
AC_SUBST(GPS_VERSION)

AC_SUBST(opsysfile)

AC_SUBST(TARGET)
AC_SUBST(EXEC_PREFIX)

AC_SUBST(STRIP_CR)
AC_SUBST(CAN_OUTPUT)
AC_SUBST(TARGET_CFLAGS)
AC_SUBST(TARGET_LFLAGS)
AC_SUBST(TARGET)
AC_SUBST(EXEC_COMMAND)
AC_SUBST(DEFAULT_PS)
AC_SUBST(DEFAULT_FONT)
AC_SUBST(PRINT_CMD)
AC_SUBST(DIFF_CMD)
AC_SUBST(PATCH_CMD)
AC_SUBST(OPAQUE_MDI)
AC_SUBST(HOST_TYPE)
AC_SUBST(EXECUTION_WINDOW)
AC_SUBST(PATH_STYLE)
AC_SUBST(SSH_ESCAPE)

AC_CONFIG_SUBDIRS(kernel/src_info/sn)
AC_CONFIG_SUBDIRS(kernel/src_info/sn/snsrc)

echo ""
echo "--------- Summary --------------"
echo "       python: $PYTHON_BASE"
echo "           uses --with-python=<dir> to find libpython.so"
if test "$PYGTK_INCLUDE" = "" ; then
   echo "       pygtk: no"
else
   echo "       pygtk: $PYGTK_PREFIX"
fi
echo "       xmlada: $XMLADA_GPR"
echo "           uses ADA_PROJECT_PATH to find xmlada.gpr"
echo ""

AC_OUTPUT(Makefile Makefile.common gnat/sdefault/sdefault.adb docs/Makefile po/Makefile common/Makefile.common common/src/config.ads gtkada/gtkada.gpr common/expect/Makefile common/common.gpr:common/common_${XMLADA_GPR}.gpr.in share/plug-ins/subversion.xml share/plug-ins/protocols.xml gnatlib/gnatlib_shared.gpr gnatlib/docs/Makefile gnatlib/Makefile.conf)
