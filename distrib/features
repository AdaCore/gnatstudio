GPS NEW FEATURES LIST
=====================

Copyright (c) 2005-2006, AdaCore

This file contains a list of new features introduced in GPS.
A full description of all GPS features can be found in the GPS
documentation.

An ISO date (YYYY-MM-DD) appears in parentheses after the
description line. This date shows the implementation date
of the feature.

New features in GPS 4.1.0
-------------------------

FB23-012 Improved XML edition support (2006-11-22)

  GPS now provides an improved support for editing XML files, including
  syntax highlighting, navigation between tags, checking well formedness,
  and escaping special characters in the current selection.

FB23-008 Improved Smart Completion window (2006-11-23)

   The Smart Completion now indicates, using an icon, which are the entity
   types corresponding to the proposed completions.
   See also F816-019.

FB23-011 Project dependencies analyzer (2006-11-21)

  GPS now has an optional script that you can use to analyze your project
  dependencies. It will point out dependencies that are no longer needed,
  or indirect dependencies between projects.

FB23-010 Local history of files (2006-11-20)

  GPS now has an optional script that you can use to keep a local history
  of all changes inside your files, and easily revert to a previous version
  even if it wasn't committed into the projects' VCS system.

FB13-012 New keyboard shortcuts on Project View and File View (2006-11-15)

  Keyboard navigation in the Project View and File View has been enhanced:
  it is now possible to press Enter on nodes representing files or entities
  to navigate to the file locations.

FB10-014 New action to repeat a key stroke several times (2006-11-10)

  A new action called Repeat Next can now be bound to a key shortcut
  through /Edit/Key Shortcuts/General. It can be used to repeat the
  next action several times (similar to ctrl-u in Emacs, or numeric
  prefix in vi)

FB07-010 Changing env. variables before reloading the project (2006-11-07)

  In some cases, you might have a need for updating some environment
  variables, for instance ADA_PROJECT_PATH, before loading a project. This
  can now be done through the project_changing hook, in which you would for
  instance call the python function os.putenv()

FB07-007 Drag-and-drop to create new view from Project View (2006-11-07)

  From the Project View or the Files View, you can drag-and-drop a file
  anywhere in GPS. In this new release, you can now also press shift to
  create a new view of the file if the file is already edited elsewhere

FB06-004 Macros support and repeating actions (2006-11-15)

  It is now possible to record sequences of key presses, and replay them
  later on. This is available through the /Tools/Macros menu.
  It is now also possible to repeat the next key press a number of times,
  through the default control-u binding.

FA30-018 Editing file extensions for custom languages (2006-1107)

  When a custom language is defined from an XML file, it is now possible
  to set the file extension both for specifications and implementations in
  the project properties.

FA30-012 Smart completion for non Ada files (2006-10-31)

  The smart completion engine has been enhanced so that basic completion is
  provided for non Ada files. This is based on the simple identifier completion
  engine. Thus, the 'Edit/Smart Completion' and 'Edit/Complete Identifier' have
  the same effect on non Ada files.

FA20-002 New shell function to retrieve the content of a console (2006-10-20)

  A new function called "get_text" has been added to the GPS.Console class.
  It allows to get the whole content a console.

FA16-005 Better integration of AUnit in GPS (2006-10-17)

  The AUnit integration in GPS has been enhanced:
  * AUnit 2 is now supported, and becomes the default framework used by GPS.
    It is still possible to generate AUnit 1.x units.
  * GPS now uses the templates found in <prefix>/share/gps/aunit to create the
    different units.
  * The created file names are now generated from the project's naming scheme.
  * The dialogs used to generate the code have been enhanced with a better
    handling of required fields.

FA12-010 Smart completion activates automatically on '.' (2006-10-25)

   When the "Enable smart completion" preference is set, the Smart Completion
   window will come up automatically after typing a '.' character in Ada
   code.

FA12-009 Enhanced completion engine (2006-10-19)

  * The completion engine doesn't rely anymore on the compilation output. The
    database underneath is updated every time a file is saved, and works even
    on non compilable files.
  * The order of the proposed completions has been improved:
     - First comes the completion found in the current buffer, from the
       closest one to the further one (was previously the other way around).
     - Then comes the completions found from the specification and the parent
       units, in the order of appearance.
     - Finally, the completions found from the database, alphabetically ordered.
  * Completing packages names is faster.

F912-027 Allow any character in scenario variable names (2006-09-16)

  The list of valid character for names of scenario variables is no longer
  limited to alphanumeric characters. In particular on VMS, it is standard to
  use names like GNAT$PLATFORM

F912-002 The File Selection dialog uses the current context (2006-09-14)

  When opening the File Selection dialog while an editor is selected, the
  dialog starts at the directory in which the file is located.

F907-003 Remember the last search context for file searching (2006-09-13)

  Doing a search from an editor opens the search view with the 'Look in field'
  set to the last editor-related used context ("Current_File",
  "Files from project", "Files..." or "Open Files"), not only to "Current_File"
  as it used to do.

F906-007 Project wizard and properties check for empty object dir (2006-09-16)

  A new XML attribute allow_empty can be used when describing project
  attributes. In particular, it is now used to make sure that the user doesn't
  set the object or exec directories to an empty string, which isn't supported
  by tools and results in an error when parsing the project file.

F822-013 Disable the "replace all" confirmation with a preference (2006-09-12)

  A new preference has been added, in the search pannel of the GPS preferences,
  'Confirmation for "Replace all"'. By default, this preference is enabled, and
  pressing "Replace all" from the search window displays a confirmation dialog.
  It's possible to disable this either by unchecking the checkbox in the
  preferences panel, or by directly checking the checkbox "Do not ask again"
  in the popup.

F816-019 Outline View design update (2006-10-31)

  The design of the Outline View has been enhanced for better readability and
  useability. The toplevel node is hidden by default for a gain of space; new
  icons have been introduced to distinguish between entity types, and the
  profile information for subprograms is easier to distinguish from the
  subprogram name.

F810-009 Entity browser speed up (2006-08-11)

  The cross-reference engine has been improved so that getting the children of
  a tagged type in the entity browser is now much faster.

F801-019 Project with links hides files in the project explorer (2006-08-08)

  When a project's source dirs are in fact symbolic links, and if you have
  forgotten to unselect the preference Fast Project Loading, the project
  explorer will now show the source files anyway, but the directory names
  have been changed to the directory pointed to by the symbolic links.

F731-001 Alias expansion containing percent sign (2006-07-31)

  It is now possible to use a percent sign as part of an alias expansion,
  by using the special string %%.

F727-011 Fix "two consecutive underlines not permitted" (2006-07-27)

  GPS will provide auto fixes for "two consecutive underlines not permitted"
  message, by removing extra underlines.

F721-007 New incremental search module (2006-07-25)

  On platforms where python is available, a new module is provided to
  emulate Emacs' incremental search feature in editors

F720-008 Improved Emacs emulation (2006-07-21)

  Several new key bindings were defined to emulate Emacs. The handling of
  selections (mark+cursor) was also enhanced

F719-014 Improved support for "no title bar" (2006-08-21)

  When disabling the "Show title bars" preference, GPS now displays the
  full name of the current editor in the main title bar, to ease working
  in this mode, and differenciate files with the same base name.

F719-012 New dialog /Edit/Startup Script Editor (2006-08-04)

  This new dialog allows you to chose which scripts GPS should load on
  startup. We have also made more scripts optionally loadable through this
  dialog, when you previously had to copy them manually from the examples
  directory.

F719-012 Removed support for old customization directories (2006-08-04)

  In GPS 2.x, the following directories were searched for customization
  files: ~/.gps/customize, ~/.gps/python_startup, $prefix/share/gps/customize
  and the file $prefix/share/gps/python/autoexec.py.
  GPS 3.x was no longer creating these directories, although still reading
  them if it found scripts in there. GPS now ignores these directories.
  Use $prefix/share/gps/plug-ins and ~/.gps/plug-ins instead

F704-013 Fix "end loop Name; expected" (2006-07-27)

  It's now possible to fix automatically messages like "end loop Name;
  expected".

F428-015 Smart completion completes subprograms profiles (2006-11-08)

  When writing a subprogram call, hitting the completion key on a comma or an
  open parenthesis will offer to complete with the remaining possible named
  parameters.

F419-014 Additions to the GPS.Console script interface (2006-10-19)

  Two new commands have been added to the GPS.Console class:
    "accept_input" tells whether a console is accepting input or not
    "enable_input" allows to make a console accept or reject input.
  A new optional parameter has been added to the constructor in order to
  control if the console should accept input or not by default.

EA14-021 Fix "use 'Valid attribute instead" (2006-07-28)

  It's now possible to fix automatically messages like "use 'Valid instead",
  in e.g. "A in B" (won't work with "not in").

D524-003 Closing windows when double-clicking on left title bar icon (2006-11-08)

  Windows can now be closed by double-clicking on the icon to the left of their
  title bar, when such an icon exits
