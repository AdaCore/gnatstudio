Known Problems fixed in GPS 5.1.0 / GNATbench 2.6.0

The following leading tags are used on the following entries to indicate:
GPS: this entry is specific to GPS
GB:  this entry is specific to GNATbench
WB:  this entry is specific to GNATbench for WorkBench
ECL: this entry is specific to GNATbench for Eclipse

If no tag is specified, the entry is relevant to all IDEs.

- K405-023 GB: Coding Style editor stays "dirty" after save operation
  Problem:    After inserting values into text fields and saving the file
              via control-s, the page stays "dirty" as if the file has not
              been saved, unless the focus is moved away from the text field.
  Workaround: Move the focus away from the text field before saving.

- K405-009 GPS: Casing selected text may corrupt editor content
  Problem:    After selecting an area and using the Casing contextual
              menu, the text replaced in the source editor may be
              inserted starting at a wrong line.
  Workaround: Fix case in the area manually.

- K405-008 GPS: off-by-one error with empty rectangles
  Problem:    Select an empty rectangle (for instance from line 1, column 4
              to line 3, column 4), and select /Edit/Rectangles/Insert Text.
              The new text is inserted in column 3 instead of 4.
  Workaround: Select up to column 5 (a non-empty rectangle).

- K324-017 GB: convert to GNATbench project: finish button disabled
  Problem:    Sometimes when starting the "Convert to an Ada Project" wizard
              the finish button is disabled.
  Workaround: Touch the "Project to convert:" edit field.
  
- K315-047 Incorrect "auto-fix fo comparison with True is redundant"
  Problem:    When applying an auto-fix on redudant comparison with True,
              Codefix will fail to add the "not" in front of the expression
              if the comparison was made on a inequality.
  Workaround: Manually fix the code.

- K311-013 Exceptions with --## comments

  Problem:    Code containing comments starting with --## may issue an error
              message when loading or reloading the project.
  Workaround: Change the comments removing the # characters.

- K307-005 GPS: Making a window 'Floating' by dragging it to the desktop
  Problem:    In GPS 5.0.1 it is no longer possible to make a window 'Floating'
              by dragging its title bar to the desktop.
  Workaround: Use the menu Window->Floating instead.

- K301-029 GPS: Handling of Coding Standard switches
  Problem:    When you use the menu /Tools/Coding Standard/Edit Rules,
              some rules are incorrectly generated by GPS (in particular,
              missing ':' between the switch and its parameter). Furthermore,
              an existing rule file is incorrectly loaded for switches that
              use ':' as a separator.
  Workaround: Edit the rule files manually.
  
- K228-039 GB: Coding Standard editor inserting additional colons
  Problem:    For switches taking values, GNATbench inserted a colon after
              the switch name when writing the rules file, but there was
              already a colon included.  As a result there were two colons
              between the switch name and the value.
  Workaround: Edit the rule files manually.

- K108-001 GPS: Adding Makefile as a language results in errors
  Problem:    Edit the project properties to add Makefile as a language.
              GPS will raise an error when it parses the resulting project,
              complaining about the Body_Suffix attribute.
  Workaround: GPS no longer outputs a Body_Suffix to define the naming scheme.
              As a result, Makefiles are not automatically detected. Instead,
              you should add a naming exception for the makefile.

- JC15-033 Standard installation gpr files not found
  Problem:    On MILS and perhaps other Workbench environments such as 653,
              the gpr files installed automatically, such as "environment.gpr"
              and "apex.gpr", are not found with GNATbench and GPS. Setting
              GPR_PROJECT_PATH and ADA_PROJECT_PATH does not help.
  Workaround: Explicitly specify the path to the required gpr file within the
              referencing gpr file, rather than specifying the simple base
              file name.

- JC10-004 Errors when automatically fixing unused packages
  Problem:    When automatically removing an unused package through automatic
              code fixing, in certain situations, the chunk of removed code is
              larger than the package.
  Workaround: Manually delete the code.
  
- JC07-005 GB: project property GUI not showing scenario vars
  Problem:    When launched from GNATbench, the GPS property editor dialog does
              not show the scenario variables declared within the GNAT-defined
              project files located in <gnatpro installation>/lib/gnat, even
              though those gpr files are specified in with-clauses by the
              application project file. 
  Workaround: Use the gpr textual editor to change the project file.

- JB10-036 Too many spaces for "out" formal parameters
  Problem:    When a routine has only explicit "out" formal parameters
              (no explicit "in" or "in out" mode) then using the
              "Align formal parameters" contextual menu will add too
              many spaces before the "out" mode.
  Workaround: Manually reformat the code.

- JB30-010  GB: Opening a file with extension ".rules" throws exception
  Problem:    When clicking on a file with the ".rules" extension, GNATbench
              attempts to open the file with the GNATCheck rules editor. This
              will raise an exception when the project containing the file is
              not a GNATbench project.
  Workaround: In this case the file is likely not a GNATCheck rules file (but
              could be a makefile file, for example) so use "Open With" to
              select a different editor to open the file.

- JB19-027 GB: Makefile target descriptions not shown in dialog
  Problem:    When applying the "Invoke Makefile Target" menu entry, the
              resulting dialog shows the target name in the description field.
  Workaround: Look in the makefile itself for the description.

- JB07-002 GPS: Key manager recording too restrictive
  Problem:    The key manager does not handle properly the case where the user
              defines a new mapping for ctrl-x when some other actions are
              mapped to a key using ctrl-x as a prefix (e.g. ctrl-x+b).
              Another limitation is that it refuses to define a binding
              for ctrl-x+b if some actions are using ctrl-x as prefix.
  Workaround: Edit .gps/keys.xml manually.

- J914-003 Navigation errors when switching scenario variables
  Problem:    When switching back and forth scenario variables involving a
              change in the set of sources, the navigation may be confused
              and lead to files that are not in the current scenario.
  Workaround: Restart GPS / GNATbench and set the scenario on which navigation
              is expected.

- J902-019 Navigation without compilation doesn't work with UTF8
  Problem:    Navigation without compilation may not be available when there is
              UTF8 characters on the line.
  Workaround: Compile the file and then navigate.

- J302-007 No quick fixes for unreferenced type definitions
  Problem:    When an unreferenced type definition is detected by the compiler,
              no quick fix is offered to removed the type or add a pragma
              unreferenced.
  Workaround: Manually fix the code.

- H423-012 GB: "New Ada Source Dir" wizard always puts updated gpr file at root
  Problem:    When using the New Ada Source Dir wizard, the updated gpr file is
              unconditionally written to the project root instead of to the
              actual location.
  Workaround: Edit the gpr file manually.

- GB21-006 Profile completion errors with formal parameters
  Problem:    Auto completion with formal parameters of subprogram calls may
              not insert the correct formal parameters if there are already
              unordered parameters given.
  Workaround: Manually complete the code.

- F622-029 GPS: Completion prefix error when the list is too large
  Problem:    In GPS, when querying a smart completion, if the list is too
              large, the common prefix used to complete the current identifier
              may be wrong.
  Workaround: Manually complete the code.
