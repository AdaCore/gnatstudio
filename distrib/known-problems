Known Problems fixed in GPS 4.4.2

- J420-002: Unix installation removes gps_codepeer_bridge
  Problem:    If you install first CodePeer and then GPS under the same
              location, the gps_codepeer_bridge executable is removed.
  Workaround: Install CodePeer after installing GPS.

- J416-007: F12 does not call SPARKFormat
  Problem:    When using the SPARK toolset, using F12 no longer performs a
              SPARKFormat on the current file.
  Workaround: Use the menu item instead of the keyshortcut.

- J331-011: Files not normalized when opened from debugger view
  Problem:    From the call stack view, if GPS opens a new editor when clicking
              on a frame, then the corresponding file might not contain a
              normalized path, and contextual menus in the editor might not
              contain all expected menus.
  Workaround: Close the editor and open a new one from the project view or
              using shift+F3.

- J302-008: Parenthesis highlighting not working at end of comment
  Problem: Parenthesis or delimiter highlighting does not work when the
           cursor is positioned right after a closing delimiter wich is at the
           end of a comment block.
  Workaround: Add text at the end of the comment, after the closing delimiter.

- J301-015: Completion of child package lost
  Problem:    In certain cases, the completion loses the knowledge of the
              relationship between parent and child packages, and doesn't
              manage to correctly complete e.g. with clauses or components
              coming from private parent parts.
  Workaround: Restart GPS, or complete manually the code.

- J301-009: Possible instabilities after doing File->Save as and closing editors
  Problem:    When using File->Save as to change the name of an editor, if you
              save a file from name A to B, then another file from C to A.
  Workaround: Use the "File Operations" menu in the Project View to rename
              files.

- J215-022: Documentation generation issue with custom css files
  Problem:    When a plugin defines a custom css files to be included in the
              generated documentation, then this css files is copied in the
              doc directory instead of the expected doc/support directory.
  Workaround: Manually move the css files to the support subdirectory.

- IC21-009: Cursor location in Text View may become partially hidden
  Problem:    When the GPS default font is pretty big, the cursor location may
              not be large enough to contain the actual value.
  Workaround: Try using a smaller default font.

Known Problems fixed in GPS 4.4.1

- IC01-004: Potential instability when switching projects
  Problem:    When loading a new project in GPS (for instance through the
              menus Project->Open... or Project->Recent), GPS might become
              unstable or crash.
  Workaround: Instead of loading a new project from GPS, close GPS and load
              it on the new project.

- IB20-014: Empty C outline when GPS is open on an C file.
  Problem:    When GPS is opened on a C file, the outline is empty, and will
              stay empty for that file during the whole GPS session.
  Workaround: Close the file, an restard GPS.

- IB18-002: Wrong autocasing in annotated comments
  Problem:    In annotated (e.g. SPARK) comments, when a keyword is
              the last word in the line, autocasing gets enabled unexpectedly.
  Workaround: Disable autocasing or insert a space after the keyword.

- IB17-016: Wrong order of mains when using extended projects
  Problem:    When defining new mains in an extending project, the newly
              defined mains appear after the original mains in the list
              of build targets. Also, the shortcut "F4" builds the first
              main in the original project, rather than in the extending
              project.
  Workaround: Use the menu to build the extending main, or the contextual
              menu on the project, or add a target button in the toolbar
              using the Build Settings dialog.

- IB17-002: Project editor issues when the gnat path contains spaces.
  Problem:    When the gnat compiler is installed in a directory containing
              spaces, then the project editor won't show the Ada switches
              in the switch editor.
  Workaround: Install gnat in a directory without spaces.

- IB12-015: Internal error in dependencies.py plugin
  Problem:    When using this plugin, an internal error might be reported.
  Workaround: None.

- IB11-008: Fixes for "end parent.child; expected" messages
  Problem:    Messages like "end parent.child; expected" are not provided with
              an auto-fix.
  Workaround: Manually fix the code.

- IB10-028: Using the GPS.Process api in command line
  Problem:     When using a call of the form p = GPS.Process("some process")
               then calling p.get_result() does not return results if the
               process has ended.
  Workaround:  Use GPS.Process("some process").get_result()

- IB09-015: Crash when using location filters
  Problem:    GPS may crash on source navigation and editing when a filter is
              applied in the locations view.
  Workaround: Remove the filter before starting editing sources.

- IB06-028: expanded code not displayed with project without object dir
  Problem:    When using the contextual menu "Expanded code" on source editors
              to display expanded code for files or subprograms, GPS might
              fail to generate the expanded code if the root project does
              not have an object directory.
  Workaround: View the expanded code in command-line mode, or add an object
              directory in the root project.

- IB06-001: Wrong outline, highlighting and indentation of some C constructs
  Problem:    GPS can get confused by some use of backslash characters or
              complex macros when computing outline view, syntax highlighting
              or indentation for C files.
  Workaround: This is only a visual glitch that can be ignored. Alternatively,
              rewriting the offending code can work around this problem.

- IB02-033: Ada keywords highlighted in SPARK annotations
  Problem:    In SPARK annotations, Ada keywords in addition to SPARK keywords
              are highlighted.
  Workaround: This is only a visual glitch that can be ignored.

- IA29-019: Cannot use gnatpp_switches.py with read-only preferences file
  Problem:    The gnatpp_switches.py pllug-in requires a writable preferences
              file to operate successfully, which is no longer needed in
              GPS 4.4.1 and above.
  Workaround: Make the preferences file writable or copy the gnatpp_switches.py
              plug-in from the 4.4.1 distribution.

- IA25-002: Contextual menu slow to display on a dispatching call
  Problem:    When displaying a contextual menu for a dispatching call, GPS
              takes a long time to compute the menu, and unexpectedly loads
              extra xref information in memory.
  Workaround: Set the 'Editor/Submenu for dispatching calls preference' to
              'Never'.

- IA27-014: Symbolic links always resolved when using -Pproject
  Problem:    The behavior is different when using -Pproject and -Pproject.gpr.
              In the former case, GPS never resolved symbolic links, but did
              in the latter. The behavior is now the same in both cases, and
              depends on the Fast Project Loading preference
  Workaround: Either specify the extension or not, depending on the behavior
              you want.

- IA23-035: GPS may crash when setting the default remote servers
  Problem:    In the remote view, clicking on the 'Set default' button may make
              GPS crash.
  Workaround: Set the remote servers manually.

- IA23-010: GPS may crash when assigning the remote servers to the local host
  Problem:    When a project has remote servers assigned, setting the remote
              configuration back to '(local)' may make GPS crash.
  Workaround: Load the project from a different location, so that the remote
              configuration is reset.

- IA16-010: GPS creates new substyle for each item in locations view at restart
  Problem:    Each time GPS is starting it creates substyles of highlighting
              styles used for highlighing in the source editor.
  Workaround: This can be safely ignored.

- IA15-008: Typing text while GPS is loading may write in read-only editors
  Problem:    When typing text during the launch phase of GPS, if GPS is
              opening read-only editors, then some of the text typed might be
              inserted in the editors.
  Workaround: Click on the "read-only" label on the bottom-right of editors
              to undo the edition.

- IA15-007: Sorting by subcategory in the locations view does not affect files
  Problem:    Sorting by subcategory in the locations view affects only
              messages under the file item, but not other files.
  Workaround: Use filter capabilities to filter out all messages of desired
              subcategory.

- IA14-028: Cannot initialize debugger when using .gdbinit file
  Problem:    In some cases, GPS will not be able to start a debug session
              when using a .gdbinit file (or -x switch), depending on the
              contents of the .gdbinit file.
  Workaround: Add a 'confirm off' command at the top of your .gdbinit file

- IA14-024: Some plugins cause delays in contextual menu
  Problem:    When right-clicking on an editor, if some optional plugins are
              loaded and add a lot of entries in the menus - such as
              predef_ada_entity_insertions.py - then the contextual menu might
              be slow to appear.
  Workaround: Disable the plugins which cause the slowness.

- IA14-023: No syntax highlighting for some editors when GPS starts
  Problem:    When loading GPS, editors saved in the desktop from previous
              sessions might not appear with language-specific syntax
              highlighting if they are for a language other than Ada, or
              Ada with a non-GNAT naming scheme.
  Workaround: Close these editors and re-open them.

- IA14-006: "Check coding standard" not working with paths containing spaces
  Problem:    Using GPS to check a coding standard against a project or source
              files will not work if those files/projects have a path
              containing spaces.
  Workaround: Use a path without space.

- IA13-033: Error when using predef_ada_entity_insertions.py plug-in
  Problem:    When the predef_ada_entity_insertions.py plug-in is enabled,
              an error message is generated: Command not found when creating
              contextual menu: insert AST_Entry.
  Workaround: This message can be safely ignored.

- IA13-032: C/C++ xref broken when there is a project with no sources
  Problem:    If the project hierarchy contains one or more projects that
              contain no sources and/or no object directory, GPS might not
              be able to compute the xref information for C/C++.
  Workaround: Add "dummy" sources (for instance the project file itself) to
              the projects, and give them an object directory.

- IA13-031: Show Files From Project mode in the Files View
  Problem:    This mode was broken in the recent 4.4.0 release. In particular,
              when the file view is saved and restored as part of the desktop,
              its initial contents is empty when showing only the files from
              the project.
  Workaround: Unset the mode (through the contextual menu), and reset it

- IA12-012: An error occuring when loading a project prevents load of others
  Problem:    When an error or a warning occurs when loading a project, then
              changing a scenario variable or loading another project will
              result in the project not being correctly loaded.
  Workaround: Restart GPS with the new project.

- IA09-012: Marks for search/find refs results not displayed on speedbar
  Problem:    Results of the search/find refs operations are highlighted in
              the source editor, but they are not displayed on speedbar.
  Workaround: Use the locations view or key shortcuts to navigate between
              results.

- I506-002: Wrong auto fix in case of SPARK annotations
  Problem:    When there are SPARK annotation on e.g. subprograms, auto-fixing
              profiles does not work.
  Workaround: Manually fix the code.

- F430-001: Search whole word give wrong result when text is selected
  Problem:    When a portion of word is selected, e.g. Something is selected
              as a part of the word A_Something, doing a search whole word may
              not be completely accurate for that selection, and will e.g.
              return the selected match if looked for the pattern equals the
              selection
  Workaround: Do the search without selecting the text.

Known Problems fixed in GPS 4.4.0

- IC15-016: GPS does not warn when editing a file writable for another user
  Problem:    When saving a file which is owned by another user, writable for
              that user but not writable by the owner of the GPS process, then
              GPS does not detect this and marks the file as saved.
  Workaround: Avoid using GPS on files owned by another user, or check the state
              of the file manually.

- I922-020: Cannot "Open from host" on Windows under some circumstances
  Problem:    Under Windows, using the actions "File->Open From Host" or
              "Project->Open From Host" may not work, if your system has all
              drive letters used.
  Workaround: Unassign one of the drives, then retry.

- I826-012: Potential freezes when using Citrix
  Problem:    When using GPS on a remote Windows machine accessed via Citrix,
              GPS might freeze when displaying floating windows or contextual
              menus.
  Workaround: Use another way of accessing the remote machine, for instance
              via Remote Desktop, or using GPS locally in remote mode.
              It might be worthwhile to try disabling Citrix API hooks for
              GPS, as described in
                 <http://support.citrix.com/article/ctx107825>

- I826-009: No entities displayed for C/C++ files in Project View
  Problem:    Under Windows, expanding C/C++ files might display "no entity"
              instead of displaying the entities in this file.
  Workaround: Use the Outline View to browse through entities in C/C++ files

- I826-006: Loading huge files in Messages could crash GPS
  Problem:    If you use /File/Messages/Load Contents to load a huge file
              into the Messages window, GPS might have logged the full
              contents of the file, which in some cases could result in no
              more free disk space and ultimately a crash.
              The loading of such big files was also optimized to use less
              memory
  Workaround: To avoid the crash, add the following to HOME/.gps/traces.cfg:
              GPS.KERNEL.SCRIPTS=no

- I814-017: Hang when typing a 'while' command in gdb console
  Problem:    When typing a 'while' command in the gdb console, GPS will not
              recognize the continuation line and the debugger will hang.
  Workaround: Define your command in a file, and load this file directly.

- I818-010: Code coverage: project totals and subprogram information wrong
  Problem:    When working on a project that makes use of Ada separates, the
              code coverage report might display wrong totals for the project,
              and might not be able to parse correctly some files.
  Workaround: Use the information from the .gcov files

- I813-002: Missing space when auto-fixing by inserting "is"
  Problem:    When a auto-fix is applied, replacing a semi-column by the
              reserved word "is", no space is put in front on the is which
              may result in non compilable code if there is a identifier
              before.
  Workaround: Manually fix the code.

- I807-014: Unwanted scrolling when expanding nodes in the Project View
  Problem:    When the Project View contains a lot of entries, expanding one
              entry might cause the window to scroll to another entry.
  Workaround: Scroll manually to the proper entry.

- I804-022: reformat_project.py example not working
  Problem:    The GPS example reformat_project.py fails with an "Unknown
              preference" error message.
  Workaround: Edit the reformat_project.py file, and replace
              "Ada-Align-Decl-On-Colon" with "Ada-Align-Decl-On_Colon"

- I729-013: Cannot insert a character before the first character
  Problem:    When the Casing Policy is set to "On_The_Fly", inserting
              a new line before the very first character in an editor
              might cause GPS to split the line right after the first
              character instead.
  Workaround: Fix the line manually.

- I715-007:   Code fixing adds a useless with clause.
  Problem:    On certain cases, when GNAT detects a non-visible entity,
              the automatic code fixing adds a with clause intead of a use.
  Workaround: Manually fix the code.

- I707-012: GPS may hang when doing long compilation and xrefs computation
  Problem:    When doing long compilation associated with xrefs computations,
              GPS may hang in some rare cases, depending on the order and
              number of files recompiled or analyzed.
  Workaround: Do the compilation externally, or don't browse sources when
              compiling.

- I702-019: Display problem for block highlighting or right margin (2009-07-02)
  Problem:    On some X11 displays, with some fonts, the block highlighting or
              the right margin may be drawn with an incorrect horizontal
              offset.
  Workaround: Disable the block highlighting or right margin, or ignore this
              visual artefact.

- I701-011: Display problems in contextual menus for operators
  Problem:    When calling the editor contextual menu on overidden operators
              (functions called "<" or ">" or "&" for instance), some entries
              in the contextual menu are not displayed correctly. Also, some
              "GtkWarning" messages may be displayed.
  Workaround: The warnings and wrong display can be safely ignored.

- I614-004: Tooltip appearing when the mouse pointer is not on text
  Problem:    Sometimes a tooltip will appear when the mouse pointer is not on
              top of an entity, for instance when the mouse pointer is in the
              blank spaces between the beginning of the line and an entity.
  Workaround: The tooltip that appears in this case can be ignored.

- I610-001: Smart Completion broken when at the end of the editor
  Problem:    The Smart Completion does not work well when working at the very
              end of the editor. The results can be wrong completion, bad
              placement of the cursor after the completion, or insertion of
              the special character at the wrong location when the completion
              is ended by a special character.
  Workaround: Add an extra line in the editor after the point of completion.

- I602-027: Page up / Page down keys inverted in Assembly View
  Problem:    The Page Up / Page Down keys are used in the debugger Assembly
              view to fetch the previous or next lines of the disassembly but
              the handler were inverted.
  Workaround: Use Page Up instead of Page Down or vice versa.

- I601-012: "Remove coverage files" menu not working
  Problem:    The "Tools->Coverage->Remove coverage files" menu that is created
              when the gcov.py plug-in is activated does not work if your
              project tree contains a project that has no object directory.
  Workaround: Remove the files manually (e.g from the Windows explorer or using
              command line tools on UNIX-like systems)

- I531-003: Disabling auto-casing when using On-The-Fly mode
  Problem:    The control-q prefix (to disable auto-casing) is not
              honored when using the on-the-fly casing policy.
  Workaround: Convert the text using the casing contextual menu.

- I529-026: Source files not found when debugging
  Problem:    When using a recent gdb, and debugging an executable built on
              another machine (or if sources have been moved between the build
              and the debug), GPS will not always be able to find the source
              file from the project file.
  Workaround: Use the "set substitute-path" or "dir" command in .gdbinit or
              in the debugger console.

- I529-020: Using "gcov" plugin on a project with no object directory
  Problem:    When using the "gcov" plug-in, the root directory needs to have
              an object directory, since this is where GPS will generate the
              .gcov files and look for them.
  Workaround: Use the "GCOV_ROOT" environment variable to a valid directory, if
              the root project does not have an object dir.

- I526-028: create_missing_dirs.py plug-in clears console
  Problem:    This plug-in clears the GPS console at start-up, hiding other
              messages.
  Workaround: Disable the plug-in once the directories have been created.

- I526-007: Aliases and cursor position
  Problem:    If you create an alias via the /Edit/Aliases menu, and specify
              "Indent source editor after expansion", then the position you
              set for the cursor is not taken into account
  Workaround: Reindent manually instead of via the alias property

- I520-014: Save key bindings from shortest to longest.
  Problem:    GPS won't allow a binding to be set if its prefix corresponds
              to a current key binding. This new order avoid that.
  Workaround: Fix order of key-bindings in .gps/keys.xml.

- I519-023: Refill duplicate lines on end of buffer
  Problem:    When doing a Refill on the last line of the buffer and if
              this line has no end-of-line character then the content will
              gets duplicated.
  Workaround: Add an end-of-line after the last line.

- I514-028: Bookmark location not preserved when editor closed
  Problem:    If you create a bookmark, it should always point to the same
              location in a file. However, if you modify the editor and then
              close it, the bookmark will point to a different location in
              the file next time you open the file
  Workaround: None

- I514-016: Infinite recursion in xref when using interfaces
  Problem:    If your application uses Ada05 interfaces, there are cases
              where the cross-references will enter an infinite loop (when
              the ALI file generated by the compiler does not contain the
              declaration of the interface itself).
  Workaround: None

- I424-008: Find all doesn't work on unsaved editors
  Problem:    The "Find All" button of the search view doesn't extract matches
              coming from new files not yet saved.
  Workaround: Save the file.

- I421-009: Scenario variables with non-static default values
  Problem:    When loading a project with scenario variables whose default
              value is not a static string (a concatenation, or the value of
              another scenario variable for instance), GPS fails to load
              properly.
  Workaround: use static values for scenario variables for now

- I415-009: Generate python doc with read-only install dir
  Problem:    When the GPS installation directory is read-only (as it should
              be to avoid overwriting files by mistake), you can only generate
              the python documentation (/Help/Python Extensions) once, and
              will generate errors the second time on.
  Workaround: Make the files share/gps/plug-ins/*.png read-write in the
              installation directory.

- I414-019: Buffer read/write status not properly updated
  Problem:    If the writable status is changed by an external tool
              (ClearCase for example) it is not always refreshed on
              the buffer status line.
  Workaround: Close and re-open the corresponding buffer.

- I328-003: Support for ant not working under Windows
  Problem:    Support for ant is not working under Windows because the ant
              tool is not recognized by GPS.
  Workaround: Edit the Makefile.py plug-in to always enable this plug-in

- I326-017: Cannot build when opening a project using UNC path
  Problem:    When opening a project using UNC path (\\server\share) it is
              not possible to use the GPS builder module.
  Workaround: Mount the remote share with a drive letter.

- I313-019: "Remove Category" removes highlighting for all references
  Problem:    When multiple references in the Locations window are present,
              "Remove Category" removes the highlighting of all the other
	      references. The references still work when clicked, but the
              highlighting is missing.
  Workaround: This can be safely ignored.

- I310-028: Messages informing of creation of directories for each build mode
  Problem:    When loading GPS with a Build Mode set to something other than
              "default", GPS will create subdirectories in the object
              directories for every other build mode.
  Workaround: These directories are harmless, so the message can be safely
              ignored.

- I304-009: Better sorting on the revision view
  Problem:    The dates and revision numbers were not properly sorted.
              (using an alphabetical comparison for Subversion numbers for
              example). This problem is VCS dependent.
  Workaround: Do not sort on those columns. The default sort is chronological.

- I302-022: Cloning a target does not take into account the Category field
  Problem:    When cloning a target, the field 'Category' is not taken into
              account: the new target is created in the same category as the
              original target.
  Workaround: Exit GPS, and then modify the file "targets.xml" in the .gps
              directory manually.

- I226-002: Problem when loading desktop that contains a browser
  Problem:    When loading GPS, if the saved desktop contains a browser (such
              as the Debugger Data view or a Call graph Browser for instance),
              GPS might crash when loading.
  Workaround: Remove the "desktop.xml" file from the .gps directory.

- I217-007: Incorrect width computation in entity browser
  Problem:    The width of boxes in the entity browser was sometimes
              incorrect, resulting in truncated columns
  Workaround: Most of the time the name of the type is still readable, and
              otherwise you can click on the link to expand a new box for
              the type itself.

- I205-006: Problems when manipulating non-utf8 paths
  Problem:    Parts of GPS (like the Project View) do not fully support
              paths that contain international characters which are not
              valid UTF-8.
  Workaround: Rename the directories.

- I202-039: Smart completion window behavior when scrolling
  Problem:    The smart completion window stays open when scrolling the editor,
              which can make it difficult to read text. Also, this causes the
              first click on the editor to scroll back to the place where the
              completion window was invoked.
  Workaround: Click once to cancel the smart completion window.

- I126-024: Creation of corrupted XML files when using international characters
  Problem:    When manipulating file system paths that contain international
              characters, GPS might create invalid XML files.
  Workaround: Avoid working in directories that contain international
              characters, and remove the invalid XML files from the .gps
              directory.

- I125-003: Syntax highlighting confused by search matches
  Problem:    The presence of extra highlighting in the editor (such as the
              highlighting of search matches) may cause GPS to miss some
              syntax highlighting.
  Workaround: This can be safely ignored, and goes away when the search matches
              (or other extra highlighting) are removed.

- I121-049: Missing choices for "goto spec/bodies"
  Problem:    When you use mixin inheritance (extending tagged objects through
              generics), GNAT does not generate complete cross-reference
              information, and as a result GPS is missing some possible specs
              or bodies in the contextual menu
  Workaround: Use the standard search function

- I120-033: && should be "and then" not correctly auto-fixed
  Problem:    The auto-fix made for messages such as "&& should be "and then""
              is incorrect, it adds an unexpected quote at the location of the
              fix.
  Workaround: Manually delete the extra quote.

- I117-011: Fail to commit activities on Windows
  Problem:    GPS could fail to commit activities using Cygwin/Subversion
              on Windows when a filename is passed on the command line with
              the wrong casing. Windows is non case-sensitive but keeps
              filename casing. Using different casing for the pathname
              confuses Cygwin/Subversion which checks that all files, part
              of a group commit, are all under the same repository.
  Workaround: Make sure that proper casing is used on GPS command-line.

- I115-004: Location View: "secondary" locations attached to wrong node
  Problem:    When the compiler emits information concerning the same line
              and same column in two different files, GPS might place the
              "secondary" locations (ie, the locations line containing the
              hyperlink to the referenced file) on the node corresponding to
              the wrong file.
  Workaround: Read the compiler messages from the Messages window.

- I114-032: Big memory footprint at startup
  Problem:    When GPS starts, it already uses a lot of memory. Some analysis
              Showed that a good chunk of it was from loading the
              $HOME/.gps/properties.xml file in memory in an inefficient
              datastructure
  Workaround: Remove or cleanup this file once in a whiile. It will not get
              very big unless you are using the filepos.py plugin.

- I113-033: Unexpected scrolling when switching between views of same file
  Problem:    If you have two views of the same file side by side, and scroll
              one of them so that its cursor is no longer visible, then click
              inside the other one, the latter gets scrolled randomly and the
              cursor is not moved to the line you clicked on
  Workaround: Scroll back to that line.

- HC10-015: Wrong text replacement with auto-casing
  Problem:    When auto-casing is enabled in the preferences, the wrong
              text replacement can occur if there are single quotes in the text
              being considered.
  Workaround: Edit the wrong replacement manually.

- HC09-028: Debugger: printing from named parameters call
  Problem:    If a procedure call uses named notation, trying to print an
              element (like the Msg_Status portion of "Rcv_Status=>Msg_Status")
              will yield "print Rcv_Status=Msg_Status"
  Workaround: type the correct "print Msg_Status" directly in the debugger
              console

- HC09-008: Bad handling of --display
  Problem:    The command line switch --display is not handled correctly by GPS
  Workaround: Set the environment variable DISPLAY instead. If you need to
              spawn applications from GPS to another display, you can write
              a small python plug-in that does:
                  import os; os.environ["DISPLAY"]="..."

- HA29-005: Block folding/unfolding broken with blank lines
  Problem:    If you use the GPS shell/python command "Editor.add_blank_lines"
              to add a blank line right after a line which starts a foldable
              block, and then fold this block, text corruption might occur in
              the current editor.
  Workaround: Do not use Editor.add_blank_lines in combination with block
              folding.

- HA07-008: Discrepencies between GPS and gprbuild
  Problem:    The list of source files reported by GPS and seen by gprbuild
              do not always match for languages other than Ada. This was
              fixed by using the same project manager in both tools.
              However, this change has a few minor impacts on some aspects
              of GPS: when a project is automatically generated with
              --debug, it no longer shows the runtime files in the Project
              View, nor the binder files (b~*.adb)
  Workaround: You can in fact open any file in GPS through /File/Open, so
              this issue is not blocking.

- H624-007: Outline View slow on huge files
  Problem:    When displaying huge files (10000 significant lines of code or
              more), the Outline View introduces slowdowns in GPS.
  Workaround: Close the Outline View when working on big files.

- GC24-014: Auto-fix not ideal whem fixing "missing =>" or "missing :="
  Problem:    When fixing messages like "missing =>", the fix performed by
              the auto fix does not add a space before the arrow.
  Workaround: Manually add the space.

- F927-006: Folded blocks are deleted too easily
  Problem:    If a block is folded, pressing "backspace" when the cursor is at
              the beginning of the line following the folded block will delete
              the entire folded block.
  Workaround: Use Undo to go back to previous state.

- EC12-010: Too many navigation locations stored.
  Problem:    In some cases, multiple locations in the same area are stored
              by GPS. As a result, GPS remains on the same location when
              pressing the "Back" button multiple times.
  Workaround: Press Back/Forward multiple times, or use other means of
              navigation.

- E721-004: Lines cannot be removed after removing blank lines
  Problem:    When an editor has "blank lines" (for instance when the editor
              is part of a visual comparison), after these blank lines are
              removed, some line breaks might be left read-only, making it
              impossible to remove it using the backspace/delete keys.
  Workaround: Close the editor and reopen it.

