The following leading tags are used on the following entries to indicate:
GPS: this entry is specific to GPS
GB:  this entry is specific to GNATbench
WB:  this entry is specific to GNATbench for WorkBench
ECL: this entry is specific to GNATbench for Eclipse

If no tag is specified, the entry is relevant to all IDEs.

Known Problems fixed in GPS 6.0.1 / GNATbench 2.8.1

- MC13-014: GPS: spark2014.py plug-in changes focus to previous file
  Problem:    In some cases, when running the SPARK tools using this plug-in,
              an old file buffer will be opened even though no message was
              issued concerning this source file.
  Workaround: Select the desired file buffer manually.

- MC13-030: GPS: no xref for some C++ operators
  Problem:    A large number of operators can be redefined in C++, and GPS
              was missing support for a number of them (type conversion,
              comma operator, bitwise operators, among others)
  Workaround: In a lot of cases, GPS falls back on a different xref engine
              in this case, although there might be missing references.

- MC11-062: GPS.Entity.category now returns useful value
  Problem:    This python function had been deprecated in GPS 6.0.0, but is
              in fact useful in some scripts, so it has been put back.
              GPS.Entity.is_container was returning the same information as
              is_type, which has now been fixed as well.
  Workaround: In a lot of cases, the functions GPS.Entity.is_* provide more
              accurate information than GPS.Entity.category.

- MC09-024: GPS: no xref generated for C++ files overriding '!='
  Problem:    gnatinspect fails to parse a xref file that includes
              overridings of the '!=' operator
  Workaround: In a lot of cases, GPS falls back on a different xref engine
              in this case, although there might be missing references.

- MC04-005: GPS: default fonts difficult to read.
  Problem:    On some versions of Linux, the default selections of fonts are
              difficult to read.
  Workaround: Use the preferences dialog to select different fonts. If the
              dialogs do not present a wide range of fonts, try modifying
              the file <gps_install>/etc/fonts/fonts.conf, and add:
                  <dir>/usr/share/X11/fonts/Type1</dir>
              after line 27.

- MB27-046: GPS: wrong documentation for the Preferences page
  Problem:    The documentation for the preferences page wrongly refers to
              items such as 'Jump to First Location' which have been moved
              outside of the preferences dialog and to the local menu in
              the Locations view.
  Workaround: Check the local configuration menus in all the views, they now
              contain preferences that apply specifically to that view.

- MB27-018: GPS: cannot select directory when creating project from template
  Problem:    When creating a project from a template, the dialog to choose
              the target directory for deployment might not allow clicking
              on directories.
  Workaround: Use the first button in the dialog to enter the name of the
              directory manually.

- MB26-028: the build target for "Compile all sources" doesn't work
  Problem:    The target "Compile all sources" only recompiles sources
              in the root project, not in subprojects.
  Workaround: in the command line for this target, change "-u" for "-U"

- MB15-044: GPS: ispell.py plugin broken
  Problem:    The plug-in no longer works with GPS 6.0.0
  Workaround: run aspell manually on your files

- MB13-064: GPS: title bar issues
  Problem:    GPS no longer displays title bars by default. However, if you
              chose to activate them in the preferences, there are a number
              of issues related to the display of short titles: new editor
              views always use long titles, and changing the preferences
              requires a restart of GPS.
  Workaround: restart GPS after changing the preference.

- MB13-032: GPS: clicking in Call Tree should give focus to editors
  Problem:    If you click on a location in the Call Tree, the proper
              editor is displayed, but it does not gain the keyboard
              focus (as opposed to what happens in the Locations window
              for instance).
  Workaround: Click in the editor to move the focus.

- MB11-014: GPS: omni-search popup aligned on screen edge
  Problem:    The popup window in the omni-search is sometimes aligned
              on the edge of the screen when GPS is maximized, which
              makes it hard to grab the scrollbar
  Workaround: use the keyboard to scroll or type more text to reduce
              the number of matching results.

- MB08-021: GPS: Xref_Database project attribute ignored
  Problem:    If you add the IDE.Xref_Database attribute in your project
              to specify an alternate location for the xref database (as
              documented), this database is never created by GPS.
  Workaround: edit the file cross_references.py to remove quotes around
              --db (line 104).

- MB08-004: Extension aggregate highlighted as an aspect
  Problem:    When typing interactively an extension aggregate, e.g:
                (Parent with Field => null);
              the part following the 'with' token is highlighted as an aspect
              clause.
  Workaround: This is a display issue only which can be safely ignored.

- MB07-022: GPS: spark integration broken
  Problem:    Due to a last minute change the spark.py module will often
              report a python error.
  Workaround: In spark.py, change spark_module to have a 'spark' value

- MB06-010: GPS: colors in the completion notes window difficult to read
  Problem:    When using the win32 theme, the color choices make the
              notes window of the smart completion very difficult to read.
  Workaround: Modify the file gps-gtk-win32.css to include the lines
      @define-color completion-selected-color #888;
      @define-color completions-notes-text-color #444;

- MA24-006: GPS: crash when moving the last window in a notebook
  Problem:    When moving a window within the GPS MDI by dragging the window
              tab, GPS might crash if the window was the last one in its
              notebook.
  Workaround: To initiate the dragging operation, do not drag with the mouse
              sideways, but drag the tab downwards first, and then to another
              area.

- MA08-051: GPS: reload button in Project view has no effect
  Problem:    The reload button in the local toolbar of the project view has
              no effect.
  Workaround: use the menu /Project/Reload Project instead.

- MA04-005: GPS: python error 'GUI object has no attribute cursor'
  Problem:    It might happen that some GPS plug-ins end up displaying
              the above error message in the console. This errors
              depends on the order in which various plug-ins interact.
  Workaround: None found.

- M910-014: GPS: gnatcheck is invoked with the local project
  Problem:    When launching gnatcheck through the menu Tools->Coding Standard
              ->Check current file, GPS invokes gnatcheck with the project
              containing this file rather than the root project. This causes
              unexpected behavior when there are extending projects in the
              hierarchy.
  Workaround: Launch gnatcheck manually, for instance using the menu
              Build->Project->Custom Build.

Known Problems fixed in GPS 6.0.0 / GNATbench 2.8.0

- MA17-041: GPS: default directory in welcome dialog
  Problem:    When clicking on "Browse" in the open dialog, the default
              directory should be the one from the previous project loaded,
              not the current directory (which on Windows is often the
              installation directory of GPS)
  Workaround: Navigate back to the directory.

- M923-015: GPS.Project.object_dirs might return library_dir
  Problem:    When using the object_dirs() python API, a different result
              is returned depending on the recursive parameter. The result
              includes library_dirs when recursive is True and the project
              is a library project.
  Workaround: build the object_dir by iterating over the set of loaded
              projects explicitly.

- M923-005: GPS: ctrl-click does not set location history
  Problem:    When you control-click on an entity in an editor, GPS jumps
              to the declaration or the body of that entity. However, if you
              then press "Goto Previous Location" in the toolbar, GPS moves
              back to the previous location of the toolbar, not to the entity
              you clicked on.
  Workaround: do a standard click (to move the cursor) before you do a
              control-click.

- M917-010: GPS: searching in folded lines does not reveal text
  Problem:    When searching for text in code which contains folded lines,
              when a match result is found within folded text, the text
              is not unfolded to reveal the match.
  Workaround: Unfold all lines using the menu Edit->Unfold all blocks
              prior to searching.

- M913-006: GPS: editing switches always modified Default_Switches
  Problem:    If you project contains a Compiler'Switches attribute, and you
              edit the project to add new switches, then GPS adds a
              Compiler'Default_Switches attribute instead of editing
              Compiler'Switches. But then Default_Switches is ignored by
              gprbuild.
  Workaround: use Default_Switches("ada") instead of Switches("ada") when
              you edit a project manually.

- M906-012: Missing cross-reference on synchronized interface
  Problem:    When a type is derived from a synchronized interface, there is
              no link to its parent interface (in particular in the Entities
              browser).
              This was a missing information from the compiler, so an update
              to the compiler is needed.
  Workaround: None found.

- M902-029: GPS: invalid project names accepted
  Problem:    GPS accepted invalid project names such as "name__toto",
              "name_", "name.", "name.3com", "name._child" or "name.all".
  Workaround: Always enter valid project names.

- M902-014: Search in 'Current Project' fails from editor
  Problem:    One of the 'scope' in the search dialog is "Files From Current
              Project". But this current project was not set properly when
              an editor had the focus when the dialog is opened, and therefore
              this could lead to surprising results.
  Workaround: Select the project in the Project view, and then open the dialog

- M902-009: Complete Block not working on new files
  Problem:    Create a new file, save it to an Ada file: operations working
              on blocks, such as "Complete Block" might not function.
  Workaround: Close the editor for this file after saving it, and reopen it.

- M830-046: Reloading an invalid project loses current project
  Problem:    If you edit the current project file manually but introduce a
              syntax error, GPS will display the list of error messages in the
              Locations window, and automatically load a different project
              (named 'Empty'). As a result, you can no longer Reload the
              project after fixing the syntax error.
  Workaround: Use /Projects/Recent to reload the previous project.

- M828-019: GPS: Unable to save file switch setting
  Problem:    Edited switches for individual files are not saved in
              multilanguage project.
  Workaround: edit the project manually.

- M827-001: Missing cross-reference on package name in separate
  Problem:    Clicking on the name of the parameter inside a "separate(Foo)"
              statement has no effect, and does not go to the declaration of
              Foo.
              This was a missing information from the compiler, so an update
              to the compiler is needed.
  Workaround: Search for the name of the package in the omni-search (the global
              search box in the toolbar).

- M821-028: GPS: do not use default project when projet not found
  Problem:    When the project specified with -P on the command line is not
              found, GPS would default to loading a default project (or if the
              current directory contains only one, it would load that one),
              instead of displaying an error message.
  Workaround: None needed, although it is useful to check the name of the
              projet that was loaded in the GPS title bar.

- M808-007: GPS: parameters not aligned in tooltips
  Problem:    When you display the tooltip for a subprogram with optional
              parameters, the alignment is broken because the lines for the
              optional parameters start with '['.
  Workaround: This is only a slight visual bug

- M718-016: GB cannot revert modified or upgrade unmodified builder targets
  Problem:    Reverting an ada builder target keep it unchanged.
              Unmodified ada builder target are not automatically updated when
              targets are updated by GNATbench update.
  Workaround: Remove manually from targets.xml text file located in
              your_workspace/.metadata/.plugins/com.adacore.gnatbench.core/
              builder folder the required builder target elements.

- M716-051: GB: Code Assist invocation may cause Eclipse to crash
  Problem:    Invocation of the Code Assist feature can cause a crash
              of GNATbench.
  Workaround: Restart Eclipse and retry the operation.

- M716-011: GB: Toolchain changes lost after restart
  Problem:    After a GNAT-PRO upgrade, updating the toolchains list using the
              Scan button is lost after GNATbench restart.
  Workaround: Remove the upgraded toolchain, restart GNATbench, ask for a
              toolchains scan and finally restart again GNATbench.

- M712-034: GPS: can't open view or editor from another perspective
  Problem:    If you open an editor in the Debug perspective, then move it
              in a place such that it is no longer visible when you switch to
              the default perspective, then that file cannot be opened from
              that perspective.
  Workaround: switch back to Debug, move the file to the central area, next
              to other editors, and switch back to Default perspective.

- M711-005: GPS: focus issue after drag-and-drop
  Problem:    When you drag an editor to a different notebook, it loses
              the keyboard focus (which is left to the next window in its
              old notebook), although it seems to be the active window in
              GPS.
  Workaround: click in the editor once to get the focus back.

- M703-034: GPS unexpected Align contextual menu in Bookmarks view
  Problem:    When clicking on a bookmark in the Bookmarks view, there are
              two unexpected contextual menu entries ("Align" and
              "Expanded Code") that appear.
  Workaround: They can simply be ignored (or you can disable the align.py
              and expanded_code.py plugins)

- M702-019: GPS: issue jumping to body when an entity has multiple bodies
  Problem:    When an entity has multiple bodies (for instance a subprogram
              whose body is a "is separate"), there is no way to jump to the
              second body (in this case the actual implementation of the
              subprogram).
  Workaround: Use "Find All References", and look for "[Body]" references.

- M627-054: GPS slow to execute "Replace All" on large source files
  Problem:    When executing a "Replace All" operation on a very large source
              file, GPS takes a long time to complete.
  Workaround: None known.

- M604-030: GPS refill a comment after end-of-package
  Problem:    If you try to refill a comment that is located after the end
              of the package, GPS does not do anything.
  Workaround: Add an empty line after the comment.

- M604-029: GPS: wrong casing in comments when at end of buffer
  Problem:    Comments entered when the cursor is at the end of the buffer
              are incorrectly cased.
  Workaround: Enter a space just before the cursor.

- M603-004: GPS: bad display or crash with C/C++ sources and UTF-8
  Problem:    When editing a C or C++ source files with UTF-8 characters,
              the syntax highlighting will be confused, which can lead in
              some cases to hangs or crashes of GPS.
  Workaround: Set the language to unknown or Ada to edit these files, or
              convert these files to a 8-byte file format.

- M521-020: GPS: Unwanted scrolling in the editors when switching perspectives
  Problem:    When switching perspectives, for instance when entering or
              leaving a debug session, editors scroll and lose the current
              location.
  Workaround: None: scroll manually.

- M517-006: Completion on C pointers on structures does not work.
  Problem:    Writing the operator "->" after a pointer to an struct does not
              enable the completion feature proposing the fields of the target
              struct type.
  Workaround: Declare temporarily an auxiliary variable whose type is the
              target struct type; use this temporary variable to have available
              the completion feature, and thus select the desired target field;
              then replace the auxiliary variable by the pointer to the struct.

- M516-020: ECL: Tooltips when debugging ada application may call Ada function
  Problem:    When debugging an Ada application, the Ada Editor tooltip may
              call a debugged application function to get actual value to be
              displayed in the tooltip.
  Workaround: Disable tooltips feature through Ada > Editor preferences page.

- M424-052: GB: Stack overflow on startup
  Problem:    When starting Workbench or Eclipse with the Ada editor
              open, the construct analysis could lead to an infinitly
              recursive call.
  Workaround: Close the editor and restart Eclipse.

- M411-032: GB: Code Assist invocation may cause Eclipse to crash
  Problem:    Invocation of the Code Assist feature can cause a crash
              of GNATbench due to a deadlock.
  Workaround: Restart Eclipse and retry the operation.

- M410-048: GB: Standard locations not searched for project files
  Problem:    The standard locations for GNAT-defined project files
              such as ajis.gpr and jni.gpr were not searched, so
              these projects were not found, resulting in unresolved
              user project file references.
  Workaround: Specify the standard locations (e.g., .../lib/gnat) in
              either GPR_PROJECT_PATH or ADA_PROJECT_PATH.

- M324-004: GB: Stack size warning messages at startup
  Problem:    At startup SPARK & Codepeer plugins on linux may ask to
              to set the stack size to unlimited. This is unnecessary.
  Workaround: Ignore these messages.


- M319-007: GB: Hang at startup if GPR project build is launched automatically
  Problem:    If "Build Automatically" feature is "ON" and GNATbench last
              exit occured during a GPR project build, the future GNATbench
              starts may hang.
  Workaround: Disable "Build Automatically" feature adding the line
              "description.autobuilding=false" to the
              org.eclipse.core.resources.prefs file located in
              .metadata/.plugins/org.eclipse.core.runtime/.settings
              hidden folder of the workspace.

- M318-027: GB: Missing menus when editing Ada file not part of a GPR project
  Problem:    When Codepeer plugin is installed, and when an Ada file not part
              of the workspace's GNAT projects is edited, some menus
              (ex: breakpoints/watchpoints contextual menu) are not displayed,
              and exceptions are reported in the Error Log.
  Workaround: Import in the workspace a GNAT Project containing the Ada file.
              see menu File > Import... > Ada > Existing GNAT Project

- M308-027: WB: invalid platform name appearing in "scenario.makefile"
  Problem:    When the contents of the IDE package in the GNAT project file
              are altered by the user, the new content can result in a "custom"
              toolchain that has the same name as an existing toolchain. In
              that case the name is modified automatically by GNATbench via the
              addition of a numeric suffix surrounded by parentheses. However,
              such a name cannot be used to invoke the toolchain during a build
              and the build will fail accordingly.
  Workaround: Do not alter the contents of the IDE package, as generated by the
              new-project wizard, without technical support.

- M305-044: GPS: Support of ASCII.NUL character in executable output
  Problem:    When running an execuable in a GPS console, if the executable
              returns ASCII.NUL characters as part of its output, then the
              output shown in the console is truncated to the first ASCII.NUL.
  Workaround: Use an external console to run the executable.

- M304-016: Bad indentation of comment in the middle of a separate declaration
  Problem:    When indenting code of the form:
                separate (Foo)
                -- comment
                procedure Bar is
              the comment line is indented an extra level using the
              continuation lines setting.
  Workaround: Ignore this incorrect indentation, fix the indentation manually,
              or put the comment before the separate.

- M227-013: Incorrect outline view on abstract subprograms with aspects
  Problem:    When using abstract subprograms with Ada 2012 aspects (e.g. a
              pre or postcondition), the outline view may get confused and
              incorrectly display the contents of the file.
  Workaround: Use pragmas instead of aspects.

- M214-004: GB: Ada editor shows ERROR with a blue horizontal line above
  Problem:    Sometimes when opening ada files in the AdaCore's Ada Editor, its
              contents is not displayed. Only ERROR with a blue horizontal line
              above is shown.
  Workaround: Close the editor and reopen it.

- M122-003: GPS: tasks view is too wide
  Problem:    The Tasks view does not fit in a small width (the progress bar
              gets truncated and the pause button to its left is not visible)
  Workaround: Resize it with the handles

- M119-001: GPS: crash when loading an erroneous project template
  Problem:    If you write a custom project template (.gpt) file, GPS will
              crash if the "Category" field is blank.
  Workaround: Make sure to enter a "Category" field in the .gpt file.

- M117-021: GPS: Put "Copy" near "Cut" and "Paste" in context menus
  Problem:    Menu items for Cut, Copy and/or Paste sometimes don't
              group together in contextual menu.
  Workaround: Rename "Copy" item to "Copy " in copy_paste.py file.

- M115-022: ECL: Android library not found when running app
  Problem:    The Ada project builder creates a folder in the associated
              Android project to hold the resulting dynamic library. This
              folder is named "libs/armeabi-v7a/" but that name is specific to
              that architecture. As a result, the Android OS will only load the
              library if the target architecture is compatible with the v7a
              version.
  Workaround: Rename the folder to remove the "-v7a" suffix if the target is
              indeed incompatible.  For a permanent fix, change the content of
              file "postbuild.mk" so that the value of ANDROID_TARGET_VERSION
              is "armeabi" instead.  Subsequent Ada builds will then create a
              libs folder with the more architecture-independent name.

- M103-017: Write references reported as read references
  Problem:    Variables passed in out-mode parameters are not listed as
              as write references.
  Workaround: None.

- MB13-005: GPS: CodePeer report is not opened
  Problem:    CodePeer report windows is not opened after analysis and
              'key already in map' exception is reported in log file.
  Workaround: Use HTML report.

- LC11-030: GPS: Potential conflict when redefining key shortcuts
  Problem:    It is possible to associate by mistake key shortcuts to keys
              that are already bound because the key manager dialog does not
              display a warning for some keys (such as ctrl-f).
  Workaround: Verify the absence of collisions manually.

- LC11-029: GPS: some views not saved in the desktop
  Problem:    Some views (File Switches and Elaboration Circularities) were
              not properly saved in the desktop, and as such not restored when
              GPS restarted.
  Workaround: Reopen the view with the /Tools/Views menu

- LC04-026: GPS: tooltips are blurry on Retina displays
  Problem:    GPS draws its tooltips (for instance in editors) by using
              pixmaps. This results in blurry text on high-dpi screens.
  Workaround: The text is readable even if a bit blurry.

- LB30-023: history in search dialog does not save options
  Problem:    When you select a past search pattern, GPS does not remember
              whether it was a regular expression, case insensitive or whole
              word search.
              In addition, when the dialog is opened and there is selected
              text in the current editor, GPS now sets both the pattern and
              replace field, assuming in most cases users will want to do
              a minimal change to the text, rather than reuse the previous
              replacement text.
  Workaround: select the check boxes manually

- LB30-018: Missing references with extending projects
  Problem:    If you are using extending projects, GPS will not
              parse its .ali files (containing the xref information generated
              by the compiler) if the corresponding source file does not
              exist in the extending project but only in the extended project.
  Workaround: Copying the source files from the extended project into the
              extending project will solve this issue, but is not very
              convenient.

- LB26-008: GPS: Smart completion of C/C++ parameters
  Problem:    When a function/method has several parameters, we press the
              open parenthesis, and we choose smart completion of all the
              parameters at once, then the number of added parameters added
              by GPS is correct but their names (shown as comments) is wrong.
  Workaround: Fix the name of the parameters manually.

- LB26-002: GPS: wrong comment highlighting after paste
  Problem:    When multiline Ada comment is pasted to the end of another
              comment line first line isn't highligthed properly.
  Workaround: None.

- LB21-035: GPS: wrong &lt char in locations
  Problem:    In Location View text created through scripting API has
              escaped markup characters.
  Workaround: None.

- LB21-033: GPS: Codefix of expanded names in redundant conversions
  Problem:    Fixing automatically warnings on redundant type conversions
              fails if the target type is an expanded name (that is, when
              the target type has a prefix like "x.y.t").
  Workaround: Avoid automatically fixing the code when the warning is reported
              in an expanded name.

- LB15-004: GB: Renaming gnatbench gpr file causes gnatbench properties issues
  Problem:    When renaming a gpr file and then updating gnatbench properties,
              if the project file name is not consistent with the gpr file
              name, Eclipse will crash.
  Workaround: Modify the project name in the gpr file to be consistent with the
              gpr filename.

- LB14-054: GPS: keyboard shortcuts not functional when Caps Lock is active
  Problem:    When Caps Lock is active, letter-based keyboard shortcuts for
              GPS actions do not work.
  Workaround: Create a wrapper action, bound to the capitalized version of the
              letter.

- LB13-012: GPS: The contextual menu to close other editors has been removed
  Problem:    The contextual menu appearing on notebook tabs to close other
              editors has been removed.
  Workaround: Use the menu File -> Close All Editors Except Current instead.

- LB09-038: GB: Crash due to unresolved dependencies in new project
  Problem:    When the new-project wizard creates an new AJIS or new Android
              project, Eclipse crashes without a log entry unless the user
              has specified the standard locations in either GPR_PROJECT_PATH
              or ADA_PROJECT_PATH.
  Workaround: Specify the standard locations (e.g., .../lib/gnat) in
              either GPR_PROJECT_PATH or ADA_PROJECT_PATH.

- LA23-019: Bad indentation of access procedure type in generic declaration
  Problem:    When indenting code of the form:
              generic
                 type T is access procedure;
              The indentation engine gets confused and wrongly indents the
              following statements.
  Workaround: Fix the indentation manually.

- LA12-039: GB: Excluded_Source_List_File change not applied
  Problem:    When using the Excluded_Source_List_File attribute, and entering
              an invalid file name in the referenced text file, an error
              is generated about the incorrect file name, even when fixing
              the file name manually or cleaning the project.
  Workaround: Restart Eclipse.

- LA12-034: GPS: wrong menu for target with custom name in extending project
  Problem:    When using an extending project which defines an executable name
              for a main which is defined in the extended project, GPS does not
              display the custom name in the "Run" menu, and the corresponding
              target cannot be launched through the menu or the toolbar button.
  Workaround: Use the Build->Run->Custom... menu

- LA11-026: GPS: C/C++ completion of entities defined in header files
  Problem:    GPS does not propose a list of entities for completion when the
              type of the prefix is defined in a header file.

  Workaround: Include manually the file.

- LA11-003: No xref from separate units compiled explicitly
  Problem:    If you use separate Ada units, and compile them explicitly from
              the editor (for instance /Build/Compile File), then no
              cross-reference is available anymore for that file.
  Workaround: Force the loading of all xref in memory, through
              /Build/Load Xref In Memory.

- LA04-032 GB: GPR file corrupted viewing Ada project's GNATbench properties.
  Problem:    Clicking OK when viewing the GNATbench properties of an Ada
              project can corrupt the GNAT project file of this Ada project.
  Workaround: Undo the GNAT project file change.

- L806-019: Ada 2012 aspect in type declaration corrupts completion & outline
  Problem:    If an aspect is used in a type declaration, it corrupts the
              completion database. The outline view may also be frozen.
  Workaround: Use pragmas instead of aspects.
