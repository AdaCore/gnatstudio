Known Problems fixed in GPS 5.1.0 / GNATbench 2.6.0

The following leading tags are used on the following entries to indicate:
GPS: this entry is specific to GPS
GB:  this entry is specific to GNATbench
WB:  this entry is specific to GNATbench for WorkBench
ECL: this entry is specific to GNATbench for Eclipse

If no tag is specified, the entry is relevant to all IDEs.

- K804-028: GPS: Line highlighting not removed
  Problem:    Sometimes the line highlighting such as those showing build
              error messages are not removed from the editor, even if the
              corresponding message has been removed from the Locations view.
  Workaround: close and reopen the file editor.

- K727-003: GPS: CodePeer ranking and comments not updated
  Problem:    When the same message comes from several generic instantiations
              it looks like it reappear after change of its ranking and
              reloading of report. Actually, reappear message is another copy
              of the same message.
  Workaround: Change ranking of the message several times.

- K726-019: GPS: project view incorrectly refreshes extended projects
  Problem:    When using extending projects and changing scenario variables
              such that the extended project is modified (for instance its
              list of source directories), then the changes are not displayed
              properly in the project view, although they are properly taken
              into account by GPS.
  Workaround: close and reopen the project view.

- K726-004: GPS: cannot use dead key for apostrophe with some keyboard layouts
  Problems:   Under Windows, with some keyboard layouts such as international
              US, it is not possible to write the apostrophe character and the
              double quote character by pressing the corresponding dead key
              followed by space.
  Workaround: Use another keyboard layout.

- K721-007: GPS: ClearCase Native "Describe" actions not working
  Problem:    When using the ClearCase Native plugin, some basic actions such
              as "Describe" might not work.
  Workaround: In clearcase.xml, at line 16, in the definition of action
              "clearcase_describe", replace all occurrences of '\\' with '\'.

- K721-006: GPS: invalid project file generated when using the GPS dialog
  Problem:    When using the Project Properties dialog to create or modify a
              project, if line feed characters are introduced in text entries
              (through copy/pasting for instance), the project saved by GPS
              might not have a valid project syntax where this line feed is
              written.
  Workaround: Modify the project file manually to resolve the errors.

- K719-029: GPS: Refactoring not working if launched on entity with right name
  Problem:    When launching a Refactoring -> Rename <entity> operation, if the
              entity under the cursor already has the desired name, executing
              the refactoring will do nothing. This prevents for instance
              changing the casing of entities from an entity that has the right
              casing.
  Workaround: Find an instance that has the wrong casing and launch the
              renaming from that instance, or first change the name, then
              recompile, then re-change the name to the right casing.

- K711-021: GPS: Defining an alternate toolchain has no effect on gnatcheck
  Problem:    When using the dual compilation toolchain feature of GPS, then
              gnatcheck uses the compiler in 'compiler path' instead of the
              compiler in 'tools path'.
  Workaround: Manually update the paths before launching GPS for compilation
              or for tool use.

- K708-027: GPS: Debugger information on lines wrong after recompilation
  Problem:    When the Debugger preference "Show lines with code" is enabled,
              if you load one file editor, then end launch a debugging session,
              edit the file, recompile, and relaunch the debugging session, GPS
              will show 'dots' on the side of lines that were executable in the
              previous debugging session.
  Workaround: Disable the preference "Show lines with code", or switch to
              an editor for another file before launching the second debugging
              session.

- K708-026: GPS: some key shortcuts not working in modal dialogs
  Problem:    Key shortcuts involving "ctrl" or "alt", for instance "ctrl-v"
              to paste, do not work in modal dialogs. 
  Workaround: Use equivalent key shortcuts (for instance "shift-insert" to
              paste) when they exist.

- K623-016: GB: GNATbench crash using Ada editor
  Problem:    Using Ada editor's code assist feature, sometimes lead to
              a crash.
  Workaround: Disable code assist tool using GNATbench Ada Tools preferences
              page. (see Window => Preferences => Ada => Tools).

- K607-047: Jumping to distant delimitor does not work
  Problem:    When using the menu Navigate->Goto Matching Delimiter, if the
              matching delimiter is too far away (more than 8192 characters),
              GPS does not jump to the position of the matching delimiter.
  Workaround: Go to the position manually.

- K518-016: Cannot create directories recursively
  Problem:    When creating a directory, for instance when creating a new
              project through the project Wizard, the IDE fails to create
              the directory if there are intermediate directories that need
              to be created.
  Workaround: Create the directory manually on the filesystem.

- K513-018 GB: GNATbench non-responsive after a build
  Problem:    When building Ada projects having a huge number of errors or
              warnings, the "Building Projects" task takes minutes to 
              complete. Sometimes GNATbench becomes also non-responsive for
              minutes.
  Workaround: Disable quick fixes tool using GNATbench Ada Tools preferences
              page. (see Window => Preferences => Ada => Tools).

- K513-009 GPS: improved support for listing classes in Python outline
  Problem:    Classes were not always listed in the Outline for Python sources.
  Workaround: In plugin python_support.py, line 187, set the pattern to
    ^\s*class\s+([\w_][\w\d_]+)\s*(\([^\)]*\))?:

- K502-008 Spurious errors when using smart completion
  Problem:    When using extensively the smart completion through e.g. Dynamic
              smart completion in GPS, the completion may stop working and
              possibly leading to a crash.
  Workaround: Relaunch GPS or GNATbench.

- K425-003 GPS: some toolchains not properly loaded from project
  Problem:    If a toolchain is not defined in the 'toolchains.xml' file, then
              at startup GPS might not properly load the 'gnatmake' command.
  Workaround: Edit share/gps/plug-ins/toolchains.xml and add the toolchain
              there.

- K419-015 GB: GNATbench crash near startup
  Problem:    GNATbench 2.5.1 crashes depending on PATH environment variable.
              The crash occurs at GNATbench startup, or later when the first
              GNATbench function is accessed.
  Workaround: Remove all network locations from the PATH used when launching
              GNATbench. Simplify the PATH used when launching GNATbench. 
              
- K418-017 GB: errors with comments ending with **
  Problem:    GNATbench may crash if source file contain comment ending with
              **.
  Workaround: Add some random character at the end of the comment.

- K418-012 GPS: creates broken library file for 'Analyze Root Project'
  Problem:    GPS creates broken library file for 'Analyze Root Project'
              action.
  Workaround: Use 'Analyze All' instead.

- K418-001 GPS: CodePeer's database can't be stored on separate drive
  Problem:    On Windows, CodePeer's output and database directories can be
              located on separate (from project) drive.
  Workaround: Use the same drive to store both project and CodePeer output and
              database directories.

- K414-002 GPS: CodePeer's SCIL messages are not removed on sequential runs
  Problem:    Error messages from CodePeer's SCIL generator are not removed on
              subsequential runs.
  Workaround: Manually remove 'CodePeer' category before next run.

- K413-033 GPS: Project properties editor slow to display
  Problem:    When your project has several thousand sources, the project
              properties editor might be slow to display.
  Workaround: Edit the plugin projects.xml and remove the lines for the
              "source_files" attribute. This will disable graphical editing
              of this attribute, but will make the editor faster.

- K405-023 GB: Coding Style editor stays "dirty" after save operation
  Problem:    After inserting values into text fields and saving the file
              via control-s, the page stays "dirty" as if the file has not
              been saved, unless the focus is moved away from the text field.
  Workaround: Move the focus away from the text field before saving.

- K405-009 GPS: Casing selected text may corrupt editor content
  Problem:    After selecting an area and using the Casing contextual
              menu, the text replaced in the source editor may be
              inserted starting at a wrong line.
  Workaround: Fix case in the area manually.

- K405-008 GPS: off-by-one error with empty rectangles
  Problem:    Select an empty rectangle (for instance from line 1, column 4
              to line 3, column 4), and select /Edit/Rectangles/Insert Text.
              The new text is inserted in column 3 instead of 4.
  Workaround: Select up to column 5 (a non-empty rectangle).

- K324-017 GB: convert to GNATbench project: finish button disabled
  Problem:    Sometimes when starting the "Convert to an Ada Project" wizard
              the finish button is disabled.
  Workaround: Touch the "Project to convert:" edit field.

- K315-047 Incorrect "auto-fix fo comparison with True is redundant"
  Problem:    When applying an auto-fix on redudant comparison with True,
              Codefix will fail to add the "not" in front of the expression
              if the comparison was made on a inequality.
  Workaround: Manually fix the code.

- K311-013 Exceptions with --## comments

  Problem:    Code containing comments starting with --## may issue an error
              message when loading or reloading the project.
  Workaround: Change the comments removing the # characters.

- K301-029 GPS: Handling of Coding Standard switches
  Problem:    When you use the menu /Tools/Coding Standard/Edit Rules,
              some rules are incorrectly generated by GPS (in particular,
              missing ':' between the switch and its parameter). Furthermore,
              an existing rule file is incorrectly loaded for switches that
              use ':' as a separator.
  Workaround: Edit the rule files manually.

- K228-039 GB: Coding Standard editor inserting additional colons
  Problem:    For switches taking values, GNATbench inserted a colon after
              the switch name when writing the rules file, but there was
              already a colon included.  As a result there were two colons
              between the switch name and the value.
  Workaround: Edit the rule files manually.

- K222-028 GB: Invoking metrics analysis does not show Problems view
  Problem:    When the metrics analysis cannot complete (e.g., due to syntax
              errors) the Metrics view is nonetheless given the focus, hiding
              the Problems view. This can leave the user under the impression
              that no problem has arisen because the Metrics view might still
              display (potentially obsolete) content.
  Workaround: Check the Problems view or Console view manually after invoking
              the metrics analysis.

- K131-009 GPS: Missing callers in Callgraph View
  Problem:    When a subprogram is called within a block or a loop with a
              label, the Call Graph in GPS will not show those calls.
  Workaround: Use "Find All References" in the contextual menu to find all
              locations of the calls, and click on them to find the caller.

- K108-001 GPS: Adding Makefile as a language results in errors
  Problem:    Edit the project properties to add Makefile as a language.
              GPS will raise an error when it parses the resulting project,
              complaining about the Body_Suffix attribute.
  Workaround: GPS no longer outputs a Body_Suffix to define the naming scheme.
              As a result, Makefiles are not automatically detected. Instead,
              you should add a naming exception for the makefile.

- JC15-033 Standard installation gpr files not found
  Problem:    On MILS and perhaps other Workbench environments such as 653,
              the gpr files installed automatically, such as "environment.gpr"
              and "apex.gpr", are not found with GNATbench and GPS. Setting
              GPR_PROJECT_PATH and ADA_PROJECT_PATH does not help.
  Workaround: Explicitly specify the path to the required gpr file within the
              referencing gpr file, rather than specifying the simple base
              file name.

- JC10-004 Errors when automatically fixing unused packages
  Problem:    When automatically removing an unused package through automatic
              code fixing, in certain situations, the chunk of removed code is
              larger than the package.
  Workaround: Manually delete the code.

- JC07-005 GB: project property GUI not showing scenario vars
  Problem:    When launched from GNATbench, the GPS property editor dialog does
              not show the scenario variables declared within the GNAT-defined
              project files located in <gnatpro installation>/lib/gnat, even
              though those gpr files are specified in with-clauses by the
              application project file.
  Workaround: Use the gpr textual editor to change the project file.

- JB10-036 Too many spaces for "out" formal parameters
  Problem:    When a routine has only explicit "out" formal parameters
              (no explicit "in" or "in out" mode) then using the
              "Align formal parameters" contextual menu will add too
              many spaces before the "out" mode.
  Workaround: Manually reformat the code.

- JB30-010 GB: Opening a file with extension ".rules" throws exception
  Problem:    When clicking on a file with the ".rules" extension, GNATbench
              attempts to open the file with the GNATCheck rules editor. This
              will raise an exception when the project containing the file is
              not a GNATbench project.
  Workaround: In this case the file is likely not a GNATCheck rules file (but
              could be a makefile file, for example) so use "Open With" to
              select a different editor to open the file.

- JB19-027 GB: Makefile target descriptions not shown in dialog
  Problem:    When applying the "Invoke Makefile Target" menu entry, the
              resulting dialog shows the target name in the description field.
  Workaround: Look in the makefile itself for the description.

- JB07-002 GPS: Key manager recording too restrictive
  Problem:    The key manager does not handle properly the case where the user
              defines a new mapping for ctrl-x when some other actions are
              mapped to a key using ctrl-x as a prefix (e.g. ctrl-x+b).
              Another limitation is that it refuses to define a binding
              for ctrl-x+b if some actions are using ctrl-x as prefix.
  Workaround: Edit .gps/keys.xml manually.

- J929-004 Keys '-' and '=' unuseable after using browsers
  Problem:    When using browsers (such as the Call Graph browser or the
              Entity browser), if you bring up the contextual menu on the
              browser, then the '-' and '=' keys can no longer be used in
              text editors.
  Workaround: Do not use the contextual menu on the browsers, or restart GPS
              afterwards. For intensive use of browsers, you can also open
              another instance of GPS on the same project for browser use.

- J914-003 Navigation errors when switching scenario variables
  Problem:    When switching back and forth scenario variables involving a
              change in the set of sources, the navigation may be confused
              and lead to files that are not in the current scenario.
  Workaround: Restart GPS / GNATbench and set the scenario on which navigation
              is expected.

- J902-019 Navigation without compilation doesn't work with UTF8
  Problem:    Navigation without compilation may not be available when there is
              UTF8 characters on the line.
  Workaround: Compile the file and then navigate.
  
- J429-026 GB: Project names cannot contain dashes
  Problem:    In Workbench, project names do not have to conform to the 
              syntax of Ada identifiers, but the resulting project files
              are illegally named.  For example, dashes are allowed as
              project names but will cause project conversion to fail.
  Workaround: When creating projects in Workbench, use legal Ada identifiers.

- J329-016 GPS: ranking of some CodePeer messages cannot be changed
  Problem:    Ranking of 'check always fails' and 'subp never returns'
              messages cannot be changed by a manual message review.
              The ranking of these messages is always reset to 'high' when
              the codepeer analysis data is reloaded.
  Workaround: None.

- J302-007 No quick fixes for unreferenced type definitions
  Problem:    When an unreferenced type definition is detected by the compiler,
              no quick fix is offered to removed the type or add a pragma
              unreferenced.
  Workaround: Manually fix the code.

- I416-040 Source navigation does not work correctly with multi-unit files
  Problem:    External references in multi-unit source files are not fully
              supported.
  Workaround: Use gnatchop with multi-unit source files.

- H423-012 GB: "New Ada Source Dir" wizard always puts updated gpr file at root
  Problem:    When using the New Ada Source Dir wizard, the updated gpr file is
              unconditionally written to the project root instead of to the
              actual location.
  Workaround: Edit the gpr file manually.

- GB21-006 Profile completion errors with formal parameters
  Problem:    Auto completion with formal parameters of subprogram calls may
              not insert the correct formal parameters if there are already
              unordered parameters given.
  Workaround: Manually complete the code.

- F622-029 GPS: Completion prefix error when the list is too large
  Problem:    In GPS, when querying a smart completion, if the list is too
              large, the common prefix used to complete the current identifier
              may be wrong.
  Workaround: Manually complete the code.
