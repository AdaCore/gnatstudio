=========================================
GPS 17 and GNATbench 17 NEW FEATURES LIST
=========================================

Copyright (C) 2011-2016, AdaCore

This file contains a list of new features introduced in GPS and GNATbench IDEs.
A full description of all features can be found in the GPS or GNATbench
documentation.

An ISO date (YYYY-MM-DD) appears in parentheses after the
description line. This date shows the implementation date
of the feature.

The following leading tags are used on the feature entries to indicate:
GPS: this entry is specific to GPS
GB:  this entry is specific to GNATbench
WB:  this entry is specific to GNATbench for WorkBench
ECL: this entry is specific to GNATbench for Eclipse

If no tag is specified, the entry is relevant to all IDEs.

New features in GPS 17.0 / GNATbench 17.0
-----------------------------------------

NF-17-P404-008 GPS: do not highlight occurrences of keywords (2016-04-05)

  The plug-in auto_highlight_occurrences.py highlights all occurrences of
  the word under the cursor in the whole file (possibly using smart cross
  reference information to only highlight the specific entity and not its
  homonyms). This plug-in has now learned not to highlight the language's
  keywords ("constant", "begin",...) which is useless and might be slow
  since these keywords generally occur often.

NF-17-P403-002 GPS: Home goes to beginning or first-non-blank (2016-04-04)

  When using the Home key while in an editor (or any key bound to the
  action "beginning of line"), GPS will first go to the first column (as it
  has always done), but if you do it a second time it will then go to the
  first non-blank character of the line). This is a feature available in
  other code editors.

NF-17-P323-017 GPS: speed up search and replace (2016-04-05)

  The "search and replace all occurrences" has been sped up by a factor of
  seven in some cases.

NF-17-P321-014 WB: add VxWorks 653 3.1 support (2016-03-21)

  GNATbench is able to handle Wind River Workbench projects for VxWorks 653 3.1
  target operating system.

NF-17-P315-043 GPS: revamp the debugger Breakpoints view (2016-03-29)

  This view shows the current list of breakpoints set in the debugger. Its
  layout has been modified so that it is now smaller and can more easily be
  a permanent fixture of the desktop. Clicking on a breakpoint will display
  all its properties (both basic like file and line, exception name,... and
  advanced like the condition to be met for the debugger to stop).

NF-17-P315-018 GPS: Preference for tab orientation (2016-03-18)

  New preference added to configure default tab orientation. This allows,
  for example, to put tabs horizontally at right side of a window.

NF-17-P314-024 GPS: listvars.py plugins shows reference type (2016-03-30)

  The optional listvars.py plugin (which adds a contextual menu
  "Variables used in ...") now also shows the type of reference for those
  variable (read, write, dispatching call,...)

NF-17-P310-018 GPS: Support for arm-sysgo-pikeos (2016-04-04)

  GPS now supports the arm-sysgo-pikeos toolchain.

NF-17-P217-017 GPS: New Pythin API to get Build Targets commands (2016-03-01)

  A new GPS.BuildTarget.get_command_line() method has been added in order
  to be able to retrieve the current command line of a specific Build Target.

NF-17-P204-043 GB: add template code assist (2016-02-09)

  It is now possible to add Ada code templates by pressing content assist hot
  key (Ctrl+Space). Use Tab key to edit the next template variable. Press
  Enter to finish inserting the template and go to ${cursor} position.

NF-17-P122-059 GPS: rename build targets from the GUI (2016-01-25)

  It is now possible to rename targets directly in the Target Configuration
  dialog: double-click on a target name in the tree to give it a new name.

NF-17-OC17-020 GPS: OS shell emits stty command automatically (2015-12-22)

  The "OS Shell" window sometimes need a "stty echo" command to properly
  display the keys typed on the keyboard. GPS now has a preference to
  automatically emit this command. The new shell also has a GPSSHELL
  environment variable set automatically, so that you can test it in your
  shell's configuration files to enable or disable specific behaviors.

NF-17-OC02-030 GB: trailing space removal set to autodetect (2015-12-04)

  The default value of the "remove trailing spaces when saving" feature is set
  to Autodetect. When editing new files and Autodetect mode is selected, the
  trailing spaces are removed. In this mode they are preserved only if
  trailing spaces were detected in the file content when the file was opened.

NF-17-OB24-046 GPS: exporting Call Trees to an editor (2015-11-30)

  A new action and contextual menu allow exporting the contents of the
  Call Trees view to an editor.

NF-17-OB17-034 GPS: new calculator support in omni-search (2015-11-17)

  It is now possible to type simple mathematical expression in the
  omnisearch ("2 + 3**2") to get their result in decimal, hexadecimal
  and binary.

NF-17-OB16-046 GPS: Ellipsis in Project view (2015-11-17)

  A new setting in the local menu of the Project view can be activated to
  ellipsize the long file names. A file would thus be displayed as
  "...long.adb" if the project view is not wide enough to fit the whole name.

NF-17-OB13-048 GPS: GPS.Menu no longer derives from GPS.GUI (2015-11-16)

  A menu no longer is necessarily a graphical object (it could be displayed
  outside of the application on some systems like Ubuntu or OSX), so this
  inheritance has been removed. Most functions have been reimplemented though
  using the action associated with the menu. Only pywidget() is no longer
  available.
  The function GPS.Menu.rename() is no longer provided. Instead, destroy the
  menu and create a new one associated with the same action.

NF-17-OB13-034 GPS: remove support for GPS.Menu.create (2015-11-13)

  This python function is now obsolescent. A simple replacement is provided
  for a few releases, but we encourage you to change your plug-ins to use
  gps_utils.interactive instead, since the latter creates proper actions
  which can be reused for contextual menus or key shortcuts.

NF-17-OB12-016 GPS: highlighting focused view (2015-11-17)

  The GPS color theme was modified so that the view that currently has the
  keyboard focus has a special color in its notebook tab. Changing the color
  theme will change the colors, but will still make this tab unique.

NF-17-OB05-010 GPS: remove the Always Use External Editor pref (2015-11-06)

  This preference (which always uses an external editor rather than GPS's
  own editor) has been removed. Such editors do not conveniently give access
  to cross-references, outline, and all the other facilities provided by GPS

NF-17-OB04-001 GPS: export the output of program runs (2015-12-16)

  A new button was added to the local toolbar of the Run view, to save the
  run command output to a file.

NF-17-OB03-004 GPS: performance improvement in Project View (2015-11-20)

  The Project View is significantly faster to load - this is noticeable
  on projects that have a large number of files.

NF-17-OA30-073 ECL: AJIS examples integration (2016-01-19)

  AJIS (17.0.20151202w or later) contains GNATbench examples that can be
  imported/built/run in GNATbench without modifications.

NF-17-OA29-048 GPS: collapse all project nodes in Project view (2015-11-02)

  A new button was added to the local toolbar of the Project view, to
  collapse all project nodes. This is a way to quickly cleanup the display
  after using "Locate in Project View" for a while.

NF-17-O925-069 GPS: New GUI for the preferences dialog (2016-02-10)

  The GPS preferences dialog has been completely reworked.
  A new look-and-feel has been introduced, gathering the preferences
  in groups and with the documentation being direclty displayed under
  each preference.
  The user is now able to search among preferences using the omnisearch
  bar or the preferences dialog local search bar.
  The color theme picker and the key shortcuts and plugins editors are
  now directly accessible from the preferences dialog.
  GPS hidden preferences can now be displayed and edited by activating the
  "Show advanced preferences" setting from the dialog's local menu.

NF-17-O807-036 GPS: Review multiple CodePeer messages at once (2016-02-01)

  GPS now allows reviewing multiple CodePeer messages at once.

NF-17-O805-011 GPS: add multi-select to Locations View (2015-11-09)

  It is now possible to select multiple items in the Locations view,
  in particular to remove or export them all in a single operation.
  If selected one item - working as before.
  If selected more than one item:
    - jumping to source code location not allowed
    - context menu is available if selected items are from one file

NF-17-O727-014 GPS: "Find all references" finds overridden (2016-01-26)

  The action "find all references" on an entity now includes by default
  all the entities overriding it, all entities it overrides, and
  all entities overriding the entities it overrides.

NF-17-O314-006 GPS: saving project before opening it's source (2015-11-05)

  Edit-source button in project properties rewrites project's
  file (with user's confirmation) before opening it in editor.
  This closes the dialog.

NF-17-NB13-048 GPS: width of omnisearch popup (2016-03-31)

  The width of the popup window for the omnisearch (at the top-right
  corner of the main window) is now proportional to that of the search
  field itself. And the width of the latter can be set by changing the
  settings, which is useful if you have long file names in your
  application.

NF-17-N908-050 GPS: preserve size of dialogs (2015-11-10)

  Most dialogs in GPS can be resized, and GPS will now restore the last size
  you whenever the dialog is displayed again in the future (either in the
  current session or in a later session).

NF-17-N829-014 GPS: system menus (2016-01-05)

  On OSX and Unity, GPS is now able to display the menubar outside of the
  main window. This is disabled by default, since these menus are not able
  to display tooltips or key shortcuts. They can be enabled via an advanced
  preference.

NF-17-N714-016 GPS: configurable window title (2015-11-05)

  A new preference (Window Title) has been added to configure the title of
  the GPS window. Through it, you can chose whether to display any of base
  names, directory names, project name,... in the title bar.

NF-17-G222-043 GPS: menubars for floating windows (2015-11-27)

  When an editor or a browser is made floating, its window now includes a
  menubar similar to the one used in the main GPS window. This makes it
  more convenient to execute actions via menus.
  It also includes a copy of the global toolbar.

NF-17-0000-001 GPS: Incompatible changes in Python API (2016-01-04)

  This section lists changes done in the Python API that are no longer
  compatible with previous versions of GPS.

  GPS.*Context removed (2016-01-05)

    All classes related to contexts were merged into a single GPS.Context
    class, which provides the same features as all the others combined. The
    previous names have been left for backward compatibility, but users are
    encouraged to only use GPS.Context from now one. If you script was
    explicitly testing classes ("if isinstance(ctx, GPS.FileContext)"), you
    should instead test whether specific information is available
    ("if ctx.file()").

  GPS.Toolbar, GPS.Combo, GPS.ToolButton and GPS.Button removed (2016-01-04)

    This class has been removed. Only buttons associated with named actions
    can now be added (See GPS.Action.button). A benefit is that buttons can
    now be added to either the main toolbar or to the local toolbars of the
    various views. GPS can also repeat the main toolbar in every floating
    window. Since actions can also be associated with menus and key shortcuts,
    this also encouraged code reuse.

  GPS.Menu.create obsolescent (2015-12-01)

    This function is now obsolescent, and its use is discouraged (use
    GPS.Action.menu instead). A temporary version still exists, but will be
    removed in future versions.
    The benefit is that menus are now always associated with named actions,
    which can also be bound to keyshortcuts or toolbar buttons. This encourages
    code reuse, and allows disabling all GUI items related to a given action
    more easily.
