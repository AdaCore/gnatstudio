************
Introduction
************

GNATdoc is a documentation tool for Ada which processes source files, extracts
documentation directly from the sources, and generates annotated HTML files. It
is based on the source cross-reference information (e.g. generated by GNAT for
Ada files). This means that you should ensure that cross-reference information
has been generated before generating the documentation. It also relies on
standard comments that it extracts from the source code. The engine in charge
of extracting them coupled with the cross-reference engine gives GNATdoc all
the flexibility needed to generate accurate documentation, and report errors
in case of wrong documentation.

..  GNATdoc can also generate an off-line reference manual (in ReST format)
    from a set of documented source files. Using a free ReST tool like Sphinx
    there is support for generating the output in the following formats: text
    files, LaTeX files, Unix manual pages, and Texinfo files. PDF and
    PostScript outputs can be generated from the generated LaTeX output.


Installation
------------

GNATdoc is shipped as part of the GPS package. To install it, simply launch
the GPS installer.

  **Warning** - For this preliminary version we recommend to install it
  in a new directory, different from your production GNAT Pro
  installation.

After the installation place
:file:`<gps_installation_prefix>/bin/` in your PATH environment variable.

GNATdoc is based on the source cross-reference information (e.g. generated by
GNAT for Ada files). This means that you should ensure that cross-reference
information has been generated before generating the documentation. For
this purpose, before launching the tool compile your project.

To launch gnatdoc, execute::

      gnatdoc -P<your_project>

where :file:`<your_project>` is the .gpr file at the root of your project
hierarchy (your root project).

GNATdoc generates an HTML report in the :file:`gnatdoc` directory of the object
directory of the main project.


Command line interface
----------------------

A brief description of the supported switches is available through the
switch --help::

  $ gnatdoc --help
  GNATdoc command line interface
  Usage: gnatdoc [switches] [arguments]

  -P, --project=ARG Load the given project (mandatory)
  -X ARG            Specify an external reference in the project
  -R, --regexp=ARG  Regular expression to select documentation comments
  -b                Process bodies
 --ignore-files=ARG List of files ignored by GNATdoc
  -p                Process private part of packages
  -q                Be quiet/terse
  -ws               Suppress all warnings
  --output=ARG      Format of generated documentation

*Project (-P)*

  Specify the path name of the main project file. The space between -P and
  the project file name is optional.

*External reference (-X)*

  Specify an external reference in the project.

*Regular expression (-R)*

  Regular expression used to select comments containing documentation.
  If not specified then all the comments found in the specification of
  the compilation units of the project are used to document the project;
  if specified then only those comments matching the specified regular
  expression are used to generate the documentation.

  For example, the regular expression "^-<" can be used to select the
  documentation of the following subprogram and skip the 
  internal comment::

   function Set_Alarm
     (Message : String;
      Minutes : Natural) return Boolean;
   --- Display a message after the given time.
   --  TODO: what is the unit for Minutes?
   --- @return True iff the alarm was successfully registered

*Process bodies (-b)*

  By default GNATdoc does not process the body of packages. This switch
  enables retrieving documentation of subprograms from the body of
  packages. GNATdoc first looks for the documentation in the package
  specification; if no documentation is found in the spec and this
  switch is enable then searchs for the documentation in the
  body of the subprogram.

*Ignore files (--ignore-files)*

  This switch allows to specify a list of source files ignored by GNATdoc.
  The names of the files can be separated by spaces or commas. For example::

  gnatdoc -P default.gpr --ignore-files="file_1.ads,file_2.ads"
  gnatdoc -P default.gpr --ignore-files="file_1.ads file_2.ads"

*Process private part of packages (-p)*

  By default GNATdoc does not generate documentation for declarations
  found in the private part of packages. This switch enables the
  generation of such documentation.

*Be quiet / terse (-q)*

  Do not display anything except errors.

*Suppress warnings (-ws)*

  Do not display warnings.

*Output format (--output)*

  At current stage GNATdoc generates HTML files (*--output=html*).

..  GPS interface
    -------------

..  GNATdoc can be invoked from GPS through the menu Tools.Documentation to
    generate the documentation for all files from the loaded project as well
    all its subprojects.

..  You will find the list of all documentation options in
    the menu Edit-> Preferences-> Documentation.

..  Once the documentation is generated, the main documentation file is
    loaded in your default browser.


*************
Configuration
*************

Output directory
----------------

The documentation is generated by default into a directory called
:file:`gnatdoc`, created under the object directory of the root project. This
behavior can be modified by specifying the attribute Documentation_Dir in the
package IDE of your root project::

  project Default is
     package IDE is
        for Documentation_Dir use "html";
     end IDE;
  end P;

Ignore subprojects
------------------

By default GNATdoc recursively processes all the projects on which your root
project depends. This behavior can be modified by specifying the attribute
Ignored_Subprojects in the package Documentation of your root project::

  with "prj_1";
  with "prj_2";
  with "prj_3";
  project Default is
     package Documentation is
        for Ignored_Subprojects use ("prj_1", "prj_3");
     end Documentation;
  end Default;


HTML templates
--------------

GNATdoc uses a set of templates files to control the final rendering. Modifying
these templates you can control the rendering of the generated documentation.
The templates used for generating the documentation can be found under
:file:`<install_dir>/share/gps/gnatdoc`. If you need a different layout as the
proposed one, you can change directly those files.

