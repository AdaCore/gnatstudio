
Build of Qt
-----------

Initialize Git repository (I don't know if source tar is available)

  git clone git://code.qt.io/qt/qt5.git
  cd qt5
  git checkout 5.9
  ./init-repository

Configure and build Qt

  mkdir ../build-qt5
  cd ../build-qt5

On Linux:

  ../qt5/configure -prefix <qt_install_dir> \
    -opensource -confirm-license \
    -release -static -accessibility \
    -qt-zlib -qt-libpng -qt-libjpeg -qt-xcb -qt-pcre -qt-freetype \
    -no-glib -no-cups -no-sql-sqlite -no-qml-debug -no-opengl -no-egl \
    -no-xinput2 -no-sm -no-icu -nomake examples -nomake tests \
    -skip qtactiveqt -skip qtenginio -skip qtlocation -skip qtmultimedia \
    -skip qtserialport -skip qtquick1 -skip qtquickcontrols -skip qtscript \
    -skip qtsensors -skip qtwebsockets -skip qtxmlpatterns -skip qt3d
  make
  make install

On Windows:

  copy gnumake-bla.exe somethere in PATH and rename it to mingw32-make

  copy c++.exe to g++.exe in stable-gnat

  add path to stable-gnat into PATH

  note: libshell32.a must be updated

  in CMD.EXE command line:

  ..\qt5\configure.bat -prefix <qt_install_dir> -platform win32-g++ \
    -opensource -confirm-license \
    -release -static -static-runtime -accessibility \
    -no-opengl -no-icu -no-sql-sqlite -no-qml-debug \
    -nomake examples -nomake tests \
    -skip qtactiveqt -skip qtenginio -skip qtlocation -skip qtmultimedia \
    -skip qtserialport -skip qtquick1 -skip qtquickcontrols -skip qtscript \
    -skip qtsensors -skip qtwebsockets -skip qtxmlpatterns -skip qt3d

On Mac OS X:

  ../qt5/configure -prefix <qt_install_dir> \
    -opensource -confirm-license \
    -release -static -accessibility \
    -qt-zlib -qt-libpng -qt-libjpeg \
    -no-cups -no-sql-sqlite -no-qml-debug \
    -nomake examples -nomake tests \
    -skip qtactiveqt -skip qtenginio -skip qtlocation -skip qtmultimedia \
    -skip qtserialport -skip qtquick1 -skip qtquickcontrols -skip qtscript \
    -skip qtsensors -skip qtwebsockets -skip qtxmlpatterns -skip qt3d


Build Of Qt Installer Framework
-------------------------------

Put <qt_install_dir>/bin of Qt into PATH.

Download Qt Installer Framework

  git clone git://code.qt.io/installer-framework/installer-framework.git
  git checkout 3.0

Configure and build:

  mkdir ../build-installer-framework
  cd ../build-installer-framework
  qmake ../installer-framework
  make
  make install


Build of Installer for GPS
--------------------------

Install GPS with ANOD

  cd <anod_sandbox>
  ./bin/anod install gps

Copy installed files to data directory:

  cp -r <anod_sandbox>/<platform>/gps/install/* <gps_src>/installer/packages/com.adacore.gps/data

(Windows) Copy gnaticons.dll to data directory:

  cp gnaticons.dll <gps_src>/installer/packages/com.adacore/data

Run installer's builder

  cd <gps_src>/installer
  <qt_install_dir>/bin/binarycreator --packages packages/ --config config/config.xml doinstall-gui
