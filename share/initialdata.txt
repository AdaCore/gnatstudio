# for Emacs: -*- mode: org; mode: flyspell; fill-column: 79 -*-

| TABLE | entity_kinds             |               |              |                          |
| id    | display                  | is_subprogram | is_container | body_is_full_declaration |
| a     | array                    | false         | false        | false                    |
| A     | array type               | false         | false        | false                    |
| b     | boolean                  | false         | false        | false                    |
| B     | boolean type             | false         | false        | false                    |
| c     | class wide               | false         | false        | false                    |
| C     | class wide type          | false         | false        | false                    |
| d     | decimal fixed point      | false         | false        | false                    |
| D     | decimal fixed point type | false         | false        | false                    |
| e     | enumeration              | false         | true         | true                     |
| E     | enumeration type         | false         | true         | true                     |
| f     | floating point           | false         | false        | false                    |
| F     | floating point type      | false         | false        | false                    |
| g     | macro                    | true          | false        | false                    |
| G     | function macro           | false         | false        | false                    |
| h     | interface                | false         | false        | false                    |
| H     | record type              | false         | true         | true                     |
| i     | integer                  | false         | false        | false                    |
| I     | integer type             | false         | false        | false                    |
| j     | class instance           | false         | false        | false                    |
| J     | class                    | false         | false        | false                    |
| k     | generic package          | false         | true         | false                    |
| K     | package                  | false         | true         | false                    |
| l     | loop label               | false         | false        | false                    |
| L     | statement label          | false         | false        | false                    |
| m     | unsigned integer         | false         | false        | false                    |
| M     | unsigned integer type    | false         | false        | false                    |
| n     | enumeration literal      | false         | false        | false                    |
| N     | named number             | false         | false        | false                    |
| o     | fixed point              | false         | false        | false                    |
| O     | fixed point type         | false         | false        | false                    |
| p     | pointer                  | false         | false        | false                    |
| P     | access type              | false         | false        | false                    |
| q     | block label              | false         | false        | false                    |
| Q     | include file             | false         | false        | false                    |
| r     | record                   | false         | true         | true                     |
| R     | record type              | false         | true         | true                     |
| s     | string                   | false         | false        | false                    |
| S     | string type              | false         | false        | false                    |
| t     | task                     | true          | true         | false                    |
| T     | task type                | true          | true         | false                    |
| u     | generic procedure        | true          | true         | false                    |
| U     | procedure                | true          | true         | false                    |
| v     | generic function         | true          | true         | false                    |
| V     | function                 | true          | true         | false                    |
| w     | protected object         | false         | false        | false                    |
| W     | protected type           | false         | false        | false                    |
| x     | procedure                | true          | true         | false                    |
| X     | exception                | false         | false        | false                    |
| y     | function                 | true          | true         | false                    |
| Y     | entry                    | true          | true         | false                    |
| z     | unknown                  | false         | false        | false                    |
| Z     | unknown                  | false         | false        | false                    |
| +     | generic formal           | false         | false        | false                    |
| *     | private object           | false         | false        | false                    |

# Parameters (>, = and <) are not in this table, as opposed to what is done in
# ALI files, but in the e2e table

| TABLE | reference_kinds                |         |         |          |        |                   |
| id    | display                        | is_real | is_read | is_write | is_end | show_in_callgraph |
| b     | body                           | true    | true    | false    | false  | false             |
| c     | full declaration               | true    | true    | false    | false  | false             |
| d     | discriminant                   | false   | false   | false    | false  | false             |
| e     | end of spec                    | false   | false   | false    | true   | false             |
| i     | implicit reference             | false   | false   | false    | false  | false             |
| k     | parent package                 | false   | false   | false    | false  | false             |
| l     | label                          | true    | true    | false    | false  | false             |
| m     | write reference                | true    | false   | true     | false  | false             |
| o     | own reference                  | true    | true    | false    | false  | false             |
| p     | primitive operation            | false   | false   | false    | false  | false             |
| P     | overriding primitive operation | false   | false   | false    | false  | false             |
| r     | reference                      | true    | true    | false    | false  | true              |
| s     | call                           | true    | true    | false    | false  | true              |
| R     | dispatching call               | true    | true    | false    | false  | true              |
| t     | end of body                    | false   | false   | false    | true   | false             |
| w     | with line                      | true    | true    | false    | false  | false             |
| X     | type extension                 | true    | true    | false    | false  | false             |
| z     | formal generic parameter       | false   | false   | false    | false  | false             |

| TABLE | f2f_kind   |                                           |
|    id | name       |                                           |
|     0 | withs      | # A depends on B (a "with" or "#include") |
|     1 | has ALI    | # B is a lI file for A                    |

| TABLE | e2e_kind         |                                     |
|    id | name             |                                     |
|     0 | pointed type     | # A points to B                     |
|     1 | parent type      | # B is parent of A                  |
|     2 | returns          | # A returns B                       |
|     3 | renames          | # A renames B                       |
|     4 | has primitive    | # B is primitive of A               |
|     5 | instance of      | # A is instance of B                |
|     6 | is param of      | # B is parameter of B               |
|     7 | has index        | # B is an index type for array A    |
|     8 | overrides        | # A overrides B                     |
|     9 | component type   | # A is an array of B                |
|    10 | from enumeration | # A is an enumeration literal for B |
|    11 | of type          | # B is the type of object A         |
|    12 | in parameter     | # B is an "in" parameter for A      |
|    13 | out parameter    | # B is an "out" parameter for A     |
|    14 | in out parameter | # B is an "in out" parameter for A  |
|    15 | access parameter | # B is an "access" parameter for A  |

| TABLE | files |
| id    | path  | stamp      | language |
| -1    |  /    | 1970-01-01 | ada      |

# The predefined entities for each languages. New ones will be inserted as
# needed, but having a pre-made list helps documentation.

| TABLE                  | entities |           |           |             |
| name                   | kind     | decl_file | decl_line | decl_column |
| __va_list_tag          | p        |        -1 |        -1 |          -1 |
| boolean                | B        |        -1 |        -1 |          -1 |
| char                   | I        |        -1 |        -1 |          -1 |
| character              | E        |        -1 |        -1 |          -1 |
| double                 | F        |        -1 |        -1 |          -1 |
| duration               | O        |        -1 |        -1 |          -1 |
| float                  | F        |        -1 |        -1 |          -1 |
| int                    | I        |        -1 |        -1 |          -1 |
| integer                | I        |        -1 |        -1 |          -1 |
| long double            | F        |        -1 |        -1 |          -1 |
| long int               | I        |        -1 |        -1 |          -1 |
| long long int          | I        |        -1 |        -1 |          -1 |
| long long unsigned int | I        |        -1 |        -1 |          -1 |
| long unsigned int      | I        |        -1 |        -1 |          -1 |
| long_float             | F        |        -1 |        -1 |          -1 |
| long_long_float        | F        |        -1 |        -1 |          -1 |
| long_integer           | I        |        -1 |        -1 |          -1 |
| long_long_integer      | I        |        -1 |        -1 |          -1 |
| natural                | I        |        -1 |        -1 |          -1 |
| positive               | I        |        -1 |        -1 |          -1 |
| short int              | I        |        -1 |        -1 |          -1 |
| short unsigned int     | I        |        -1 |        -1 |          -1 |
| short_float            | F        |        -1 |        -1 |          -1 |
| short_integer          | I        |        -1 |        -1 |          -1 |
| short_short_integer    | I        |        -1 |        -1 |          -1 |
| signed char            | I        |        -1 |        -1 |          -1 |
| string                 | A        |        -1 |        -1 |          -1 |
| unsigned char          | I        |        -1 |        -1 |          -1 |
| unsigned int           | I        |        -1 |        -1 |          -1 |
| void                   | p        |        -1 |        -1 |          -1 |
| wide_character         | E        |        -1 |        -1 |          -1 |
| wide_wide_character    | E        |        -1 |        -1 |          -1 |
| wide_string            | A        |        -1 |        -1 |          -1 |
| wide_wide_string       | A        |        -1 |        -1 |          -1 |

