<?xml version="1.0"?>
<GNATPROVE>
  <tool name="GNATprove" package="Prove" attribute="proof_switches" index="ada">
    <language>Ada</language>
    <switches switch_char="-">
      <title column="1" line="1" >General</title>
      <spin
          label="Multiprocessing"
          switch="-j"
          min="0"
          max="1000"
          default="1"
          separator=""
          column="1"
          tip="Use N parallel processes
 (N=0 will use all cores of the machine)" />
      <combo
          label="Main mode"
          switch="--mode"
          noswitch="all"
          separator="="
          column="1"
          tip="Set the mode of GNATprove.
Mode 'check' does fast partial check for SPARK violations.
Mode 'check_all' does full check for SPARK violations.
Mode 'flow' proves correct initialization and data flow.
Mode 'prove' proves absence of run-time errors and contracts.
Mode 'all' activates all modes.">
        <combo-entry
            label="check fast"
            value="check"/>
        <combo-entry
            label="check all"
            value="check_all"/>
        <combo-entry
            label="flow analysis"
            value="flow"/>
        <combo-entry
            label="proof"
            value="prove"/>
        <combo-entry
            label="all"
            value="all"/>
      </combo>
      <combo
          label="Warnings"
          switch="--warnings"
          noswitch="continue"
          separator="="
          column="1"
          tip="Set the warning mode of GNATprove.
Mode 'error' treats warnings as errors.
Mode 'continue' issues warnings and continues.
Mode 'off' does not issue warnings.">
        <combo-entry
            label="stop after warnings"
            value="error"/>
        <combo-entry
            label="continue when warnings"
            value="continue"/>
        <combo-entry
            label="do not issue warnings"
            value="off"/>
      </combo>
      <combo
          label="Report"
          switch="--report"
          noswitch="fail"
          separator="="
          column="1"
          tip="Report results of proving checks.
Mode 'fail' reports only failed checks.
Mode 'all' reports both failed and proved checks.
Mode 'provers' reports all checks, including which provers were used.
Mode 'statistics' reports all checks, including statistics on provers.">
        <combo-entry
            label="failed checks"
            value="fail"/>
        <combo-entry
            label="failed and proved checks"
            value="all"/>
        <combo-entry
            label="all checks with provers used"
            value="provers"/>
        <combo-entry
            label="all checks with statistics on provers"
            value="statistics"/>
      </combo>
      <combo
          label="Counterexamples"
          switch="--counterexamples"
          noswitch="default"
          separator="="
          column="1"
          tip="Generate counterexamples.
Mode 'on' attempts to generate counterexamples when proof fails.
Mode 'off' does not generate counterexamples.
Otherwise, use default according to the level.">
        <combo-entry
            label="use default (depends on level)"
            value="default"/>
        <combo-entry
            label="off"
            value="off"/>
        <combo-entry
            label="on"
            value="on"/>
      </combo>
      <check
          label="Error on unproved"
          switch="--checks-as-errors"
          column="1"
          tip="Treat unproved check messages as errors"/>
      <check
          label="Output info messages"
          switch="--info"
          column="1"
          tip="Output messages with useful information about the analysis"/>
      <title column="2" line="1" >Prover</title>
      <combo
          label="Proof level"
          switch="--level"
          separator="="
          column="2"
          tip="Set the level of proof (0 = faster to 4 = more powerful).
Level 0 is equivalent to --prover=cvc4 --timeout=1 --memlimit=1000 --steps=0.
Level 1 is equivalent to --prover=cvc4,z3,altergo --timeout=1 --memlimit=1000 --steps=0.
Level 2 is equivalent to --prover=cvc4,z3,altergo --timeout=5 --memlimit=1000 --steps=0.
Level 3 is equivalent to --prover=cvc4,z3,altergo --timeout=20 --memlimit=2000 --steps=0.
Level 4 is equivalent to --prover=cvc4,z3,altergo --timeout=60 --memlimit=2000 --steps=0.">
        <combo-entry
            label="0 (fast, one prover)"
            value="0"/>
        <combo-entry
            label="1 (fast, most provers)"
            value="1"/>
        <combo-entry
            label="2 (most provers)"
            value="2"/>
        <combo-entry
            label="3 (slower, most provers)"
            value="3"/>
        <combo-entry
            label="4 (slowest, most provers)"
            value="4"/>
      </combo>
      <spin
          label="Prover timeout"
          switch="--timeout="
          column="2"
          default="0"
          min="0"
          max="3600"
          tip="Set the prover timeout in seconds. Use value 0 for
 no timeout" />
      <spin
          label="Prover step limit"
          switch="--steps="
          column="2"
          default="100"
          min="0"
          max="1000000"
          tip="Set the maximum number of proof steps (prover-specific).
 Use value 0 for no steps limit"/>
      <field
          label="Alternate provers"
          switch="--prover="
          column="2"
          tip="Comma-separated list (no spaces) of provers among cvc4,z3,colibri,alt-ergo or 'all' for all four provers" />
      <check
          label="Enable proof warnings"
          switch="--proof-warnings=on"
          column="2"
          tip="Enable warnings by proof to detect inconsistencies" />
      <check
          label="Disable sandboxing of function contracts"
          switch="--function-sandboxing=off"
          column="2"
          tip="To minimize the effect of an incorrect contract, GNATprove sandboxes the contracts of functions by default. Disabling it might increase provability." />
    </switches>
  </tool>

  <target-model name="gnatprove-examine">
    <description>Target model for GNATprove Examine commands</description>
    <iconname>gps-build-all-symbolic</iconname>
    <command-help>{help}</command-help>
    <switches command="%(tool_name)s">
      <title column="1" line="1" >General</title>
      <check
          label="Multiprocessing"
          switch="-j0"
          column="1"
          tip="Use all cores of the machine" />
      <check
          label="Do not report warnings"
          switch="--warnings=off"
          column="1"
          tip="Do not issue warnings at all" />
      <check
          label="Report checks proved"
          switch="--report=all"
          column="1"
          tip="Report all results of proving checks" />
      <check
          label="Display previous results"
          switch="--output-msg-only"
          column="1"
          tip="Do not run any provers, output current flow and proof results"
          />
      <title column="2" line="1" >Prover</title>
      <combo
          label="Analysis Mode"
          switch="--mode"
          separator="="
          column="2"
          tip="Select analysis mode.
Mode 'check' does fast partial check for SPARK violations.
Mode 'check_all' does full check for SPARK violations.
Mode 'flow' proves correct initialization and data flow.">
        <combo-entry
            label="check fast"
            value="check"/>
        <combo-entry
            label="check all"
            value="check_all"/>
        <combo-entry
            label="flow analysis"
            value="flow"/>
      </combo>
    </switches>
    <persistent-history>False</persistent-history>
  </target-model>

  <target-model name="gnatprove-basic-prove">
    <description>Target model for GNATprove Basic Prove commands
    </description>
    <iconname>gps-build-all-symbolic</iconname>
    <command-help>{help}</command-help>
    <switches command="%(tool_name)s">
      <title column="1" line="1" >General</title>
      <check
          label="Multiprocessing"
          switch="-j0"
          column="1"
          tip="Use all cores of the machine" />
      <check
          label="Do not report warnings"
          switch="--warnings=off"
          column="1"
          tip="Do not issue warnings at all" />
      <check
          label="Report checks proved"
          switch="--report=all"
          column="1"
          tip="Report all results of proving checks" />
      <check
          label="Output info messages"
          switch="--info"
          column="1"
          tip="Output messages with useful information about the analysis"/>
      <check
          label="Display previous results"
          switch="--output-msg-only"
          column="1"
          tip="Do not run any provers, output current flow and proof results"
          />
      <title column="2" line="1" >Prover</title>
      <combo
          label="Proof level"
          switch="--level"
          separator="="
          column="2"
          tip="Set the level of proof (0 = faster to 4 = more powerful).
Level 0 is equivalent to --prover=cvc4 --timeout=1 --memlimit=1000 --steps=0.
Level 1 is equivalent to --prover=cvc4,z3,altergo --timeout=1 --memlimit=1000 --steps=0.
Level 2 is equivalent to --prover=cvc4,z3,altergo --timeout=5 --memlimit=1000 --steps=0.
Level 3 is equivalent to --prover=cvc4,z3,altergo --timeout=20 --memlimit=2000 --steps=0.
Level 4 is equivalent to --prover=cvc4,z3,altergo --timeout=60 --memlimit=2000 --steps=0.">
        <combo-entry
            label="0 (fast, one prover)"
            value="0"/>
        <combo-entry
            label="1 (fast, most provers)"
            value="1"/>
        <combo-entry
            label="2 (most provers)"
            value="2"/>
        <combo-entry
            label="3 (slower, most provers)"
            value="3"/>
        <combo-entry
            label="4 (slowest, most provers)"
            value="4"/>
      </combo>
      <check
          label="Enable proof warnings"
          switch="--proof-warnings=on"
          column="2"
          tip="Enable warnings by proof to detect inconsistencies" />
      <check
          label="Disable sandboxing of function contracts"
          switch="--function-sandboxing=off"
          column="2"
          tip="To minimize the effect of an incorrect contract, GNATprove sandboxes the contracts of functions by default. Disabling it might increase provability." />
    </switches>
    <persistent-history>False</persistent-history>
  </target-model>

  <target-model name="gnatprove-prove">
    <description>Target model for GNATprove Prove commands</description>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
    </command-line>
    <iconname>gps-build-all-symbolic</iconname>
    <command-help>{help}</command-help>
    <switches command="%(tool_name)s">
      <title column="1" line="1" >General</title>
      <spin
          label="Multiprocessing"
          switch="-j"
          min="0"
          max="1000"
          default="1"
          separator=""
          column="1"
          tip="Use N parallel processes
 (N=0 will use all cores of the machine)" />
      <combo
          label="Warnings"
          switch="--warnings"
          noswitch="continue"
          separator="="
          column="1"
          tip="Set the warning mode of GNATprove.
Mode 'error' treats warnings as errors.
Mode 'continue' issues warnings and continues.
Mode 'off' does not issue warnings.">
        <combo-entry
            label="stop after warnings"
            value="error"/>
        <combo-entry
            label="continue when warnings"
            value="continue"/>
        <combo-entry
            label="do not issue warnings"
            value="off"/>
      </combo>
      <combo
          label="Report"
          switch="--report"
          noswitch="fail"
          separator="="
          column="1"
          tip="Report results of proving checks.
Mode 'fail' reports only failed checks.
Mode 'all' reports both failed and proved checks.
Mode 'provers' reports all checks, including which provers were used.
Mode 'statistics' reports all checks, including statistics on provers.">
        <combo-entry
            label="failed checks"
            value="fail"/>
        <combo-entry
            label="failed and proved checks"
            value="all"/>
        <combo-entry
            label="all checks with provers used"
            value="provers"/>
        <combo-entry
            label="all checks with statistics on provers"
            value="statistics"/>
      </combo>
      <combo
          label="Counterexamples"
          switch="--counterexamples"
          noswitch="default"
          separator="="
          column="1"
          tip="Generate counterexamples.
Mode 'on' attempts to generate counterexamples when proof fails.
Mode 'off' does not generate counterexamples.
Otherwise, use default according to the level.">
        <combo-entry
            label="use default (depends on level)"
            value="default"/>
        <combo-entry
            label="off"
            value="off"/>
        <combo-entry
            label="on"
            value="on"/>
      </combo>
      <check
          label="Force re-analysis"
          switch="-f"
          column="1"
          tip="Force recompilation/analysis of all unit"/>
      <check
          label="Output info messages"
          switch="--info"
          column="1"
          tip="Output messages with useful information about the analysis"/>
      <check
          label="Display previous results"
          switch="--output-msg-only"
          column="1"
          tip="Do not run any provers, output current flow and proof results"
          />
      <title column="2" line="1" >Prover</title>
      <combo
          label="Proof level"
          switch="--level"
          separator="="
          column="2"
          tip="Set the level of proof (0 = faster to 4 = more powerful).
Level 0 is equivalent to --prover=cvc4 --timeout=1 --memlimit=1000 --steps=0.
Level 1 is equivalent to --prover=cvc4,z3,altergo --timeout=1 --memlimit=1000 --steps=0.
Level 2 is equivalent to --prover=cvc4,z3,altergo --timeout=5 --memlimit=1000 --steps=0.
Level 3 is equivalent to --prover=cvc4,z3,altergo --timeout=20 --memlimit=2000 --steps=0.
Level 4 is equivalent to --prover=cvc4,z3,altergo --timeout=60 --memlimit=2000 --steps=0.">
        <combo-entry
            label="0 (fast, one prover)"
            value="0"/>
        <combo-entry
            label="1 (fast, most provers)"
            value="1"/>
        <combo-entry
            label="2 (most provers)"
            value="2"/>
        <combo-entry
            label="3 (slower, most provers)"
            value="3"/>
        <combo-entry
            label="4 (slowest, most provers)"
            value="4"/>
      </combo>
      <spin
          label="Prover timeout"
          switch="--timeout="
          column="2"
          default="0"
          min="0"
          max="3600"
          tip="Set the prover timeout in seconds. Use value 0 for
 no timeout" />
      <spin
          label="Prover step limit"
          switch="--steps="
          column="2"
          default="100"
          min="0"
          max="1000000"
          tip="Set the maximum number of proof steps (prover-specific).
 Use value 0 for no steps limit"/>
      <field
          label="Alternate provers"
          switch="--prover="
          column="2"
          tip="Comma-separated list (no spaces) of provers among cvc4,z3,colibri,alt-ergo or 'all' for all four provers" />
      <check
          label="Enable proof warnings"
          switch="--proof-warnings=on"
          column="2"
          tip="Enable warnings by proof to detect inconsistencies" />
      <check
          label="Disable sandboxing of function contracts"
          switch="--function-sandboxing=off"
          column="2"
          tip="To minimize the effect of an incorrect contract, GNATprove sandboxes the contracts of functions by default. Disabling it might increase provability." />
    </switches>
    <persistent-history>False</persistent-history>
  </target-model>

  <target model="gnatprove-examine" name="Examine All" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--mode=flow</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-examine" name="Examine All Sources"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--mode=flow</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>-U</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-examine"
          name="Examine Single File" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--mode=flow</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>-u</arg>
      <arg>%fp</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-examine" name="Examine Subprogram"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--mode=flow</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove All"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--level=0</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove All" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove All Sources"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--level=0</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>-U</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove All Sources"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>-U</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove File"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
      <arg>-u</arg>
      <arg>%fp</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove File" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>-u</arg>
      <arg>%fp</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove Subprogram"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove Subprogram"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove Line"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
      <arg>--limit-line=%f:%l</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove Line" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--limit-line=%f:%l</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove Line Location"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove Line Location"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove Selected Region"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove Selected Region"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target-model name="gnatprove_clean">
    <description>Target model for GNATprove for cleaning</description>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
    </command-line>
    <iconname>gps-build-all-symbolic</iconname>
    <persistent-history>False</persistent-history>
  </target-model>

  <target model="gnatprove_clean" name="Clean Proofs" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_NO_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--clean</arg>
    </command-line>
  </target>

  <target model="gnatprove-basic-prove" name="Basic Prove Check"
          category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
      <arg>--level=0</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>

  <target model="gnatprove-prove" name="Prove Check" category="GNATprove">
    <in-menu>FALSE</in-menu>
    <iconname>gps-build-all-symbolic</iconname>
    <launch-mode>MANUALLY_WITH_DIALOG</launch-mode>
    <read-only>TRUE</read-only>
    <command-line>
      <arg>gnatprove</arg>
      <arg>-P%PP</arg>
      <arg>-j0</arg>
      <arg>%X</arg>
      <arg>--output=oneline</arg>
      <arg>--ide-progress-bar</arg>
    </command-line>
    <output-parsers>
      {output_parsers}
    </output-parsers>
  </target>
</GNATPROVE>
