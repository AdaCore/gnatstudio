<?xml version="1.0" ?>

<!--  This file describes the various standard project_attributes for projects,
      as well as how they should be edited through the project properties
      editor -->

<custom>
   <project_attribute
       name="languages" 
       editor_page="Languages"
       editor_section="Languages"
       label=""
       description="List of languages for the source files of this project"
       list="true">
       <shell default="Ada">supported_languages</shell>
   </project_attribute>

   <project_attribute
       name="Compiler_Command"
       package="IDE"
       editor_page="Languages"
       editor_section="Tools"
       description="The command to compile the source files for a given language"
       hide_in="wizard library_wizard"
       label="compiler">
       <index attribute="Languages">
          <string />
       </index>
       <specialized_index value="Ada">
          <choice default="true" >gnatmake</choice>
          <choice>powerpc-wrs-vxworks-gnatmake</choice>
          <choice>powerpc-wrs-vxworksae-gnatmake</choice>
          <choice>powerpc-elf-gnatmake</choice>
          <choice>i386-wrs-vxworks-gnatmake</choice>
          <choice>m68k-wrs-vxworks-gnatmake</choice>
          <choice>mips-wrs-vxworks-gnatmake</choice>
          <choice>sparc-wrs-vxworks-gnatmake</choice>
          <choice>sparc64-wrs-vxworks-gnatmake</choice>
          <choice>xscale-wrs-vxworks-gnatmake</choice>
          <choice>powerpc-elf-lynxos-gnatmake</choice>
          <choice>powerpc-xcoff-lynxos-gnatmake</choice>
          <choice>erc32-elf-gnatmake</choice>
          <choice>gnaampmake</choice>
          <string />
      </specialized_index>
      <specialized_index value="C">
          <choice default="true" >gcc</choice>
          <string />
      </specialized_index>
   </project_attribute>

   <project_attribute
       name="gnatlist"
       package="IDE"
       editor_page="Languages"
       editor_section="Tools"
       description="The gnatls command used to find where the Ada run time files are installed"
       hide_in="wizard library_wizard"
       label="Gnatls">
       <choice default="true" >gnatls</choice>
       <choice>powerpc-wrs-vxworks-gnatls</choice>
       <choice>powerpc-wrs-vxworksae-gnatls</choice>
       <choice>powerpc-elf-gnatls</choice>
       <choice>i386-wrs-vxworks-gnatls</choice>
       <choice>m68k-wrs-vxworks-gnatls</choice>
       <choice>mips-wrs-vxworks-gnatls</choice>
       <choice>sparc-wrs-vxworks-gnatls</choice>
       <choice>sparc64-wrs-vxworks-gnatls</choice>
       <choice>xscale-wrs-vxworks-gnatls</choice>
       <choice>powerpc-elf-lynxos-gnatls</choice>
       <choice>powerpc-xcoff-lynxos-gnatls</choice>
       <choice>erc32-elf-gnatls</choice>
       <choice>gnaampls</choice>
       <string />
   </project_attribute>

   <project_attribute
       name="debugger_command"
       package="IDE"
       editor_page="Languages"
       editor_section="Tools"
       description="The application to use when debugging applications. Only gdb and its variants are currently supported by GPS"
       hide_in="wizard library_wizard"
       label="Debugger">
       <choice default="true" >gdb</choice>
       <choice>powerpc-wrs-vxworks-gdb</choice>
       <choice>powerpc-wrs-vxworksae-gdb</choice>
       <choice>powerpc-elf-gdb</choice>
       <choice>i386-wrs-vxworks-gdb</choice>
       <choice>m68k-wrs-vxworks-gdb</choice>
       <choice>mips-wrs-vxworks-gdb</choice>
       <choice>sparc-wrs-vxworks-gdb</choice>
       <choice>sparc64-wrs-vxworks-gdb</choice>
       <choice>xscale-wrs-vxworks-gdb</choice>
       <choice>powerpc-elf-lynxos-gdb</choice>
       <choice>powerpc-xcoff-lynxos-gdb</choice>
       <choice>erc32-elf-gdb</choice>
       <string />
   </project_attribute>
       
   <project_attribute
       name="global_configuration_pragmas"
       package="Builder"
       editor_page="General"
       editor_section="External configuration"
       description="External file that contains the configuration pragmas to use for Ada sources. This file will be used both for this project and all its imported projects"
       label="Global pragmas"
       hide_in="wizard library_wizard">
       <string type="file" />
   </project_attribute> 

   <project_attribute
       name="local_configuration_pragmas"
       package="Compiler"
       editor_page="General"
       editor_section="External configuration"
       description="External file that contains the configuration pragmas to use for Ada sources in this project. This is the combined with the pragmas found in the Global pragmas attribute of the root project"
       label="Local pragmas"
       hide_in="wizard library_wizard">
       <string type="file" />
   </project_attribute>

   <project_attribute
       name="remote_host"
       package="IDE"
       editor_page="General"
       editor_section="Cross environment"
       description="Name or IP address of the machine on which the application should be compiled, debugged and run. It is recommended that you always start GPS locally, and work remotely on your application. Leave this field blank when working locally"
       hide_in="wizard library_wizard"
       label="Tools host">
       <string />
   </project_attribute>

   <project_attribute
       name="program_host"
       package="IDE"
       editor_page="General"
       editor_section="Cross environment"
       description="Name or IP address of the embedded target. This field should be left blank if you are not working on an embedded application"
       hide_in="wizard library_wizard"
       label="Program host">
       <string />
   </project_attribute>

   <project_attribute
       name="communication_protocol"
       package="IDE"
       editor_page="General"
       editor_section="Cross environment"
       description="Protocol used to connect to the embedded target. This field should be left blank if you are not working on an embedded application"
       hide_in="wizard library_wizard"
       label="Protocol">
       <choice>wtx</choice>
       <choice>vxworks</choice>
       <choice>remote</choice>
       <string />
   </project_attribute> 


   <!--  VCS attributes -->
       
   <project_attribute
       name="vcs_kind"
       package="IDE"
       editor_page="VCS"
       editor_section="System"
       description="Name of the version control system that you are using"
       label="System">
       <shell default="None" >VCS.supported_systems</shell>
   </project_attribute>

   <project_attribute
       name="vcs_log_check"
       package="IDE"
       editor_page="VCS"
       editor_section="Actions"
       description="Application run on the log file/revision history just before commiting a file. If it returns anything other than 0, the commit will not be performed. The only parameter to this script is the name of the log file"
       label="Log checker">
       <string />
   </project_attribute>

   <project_attribute
       name="vcs_file_check"
       package="IDE"
       editor_page="VCS"
       editor_section="Actions"
       description="Application run on the source file just before commiting a file. If it returns anything other than 0, the commit will not be performed. The only parameter to this script is the name of the source file"
       label="File checker">
       <string />
    </project_attribute>


    <!-- Sources directories -->

    <project_attribute
        name="source_dirs"
        editor_page="Sources"
        editor_section="Source directories"
        list="true"
        ordered="true"
        description="List of directories that contain the source files. You can specify that a directory and all its subdirectories should be included by checking the Recursive checkbox"
        label="">
        <string type="directory" default="." />
    </project_attribute>

    <!--  Source files -->

    <project_attribute
        name="source_list_file"
        editor_page="Source files"
        description="Name of a file that contains the list of source files for this project. The names should appear one per line. The names should not include any directory information, since this is taken from the list of source directories. This attribute is ignored if an explicit list of sources is given."
        disable_if_not_set="true"
        disable="source_files"
        hide_in="wizard library_wizard"
        label="Source list file">
        <string type="file" default="" />
    </project_attribute>

    <project_attribute
        name="source_files"
        editor_page="Source files"
        list="true"
        base_name_only="true"
        disable_if_not_set="true"
        disable="source_list_file"
        hide_in="wizard library_wizard"
        description="List of source files for this project. These are the base name of the files, and should not include any directory information. This attribute is not compatible with Source List File.">
        <string type="file" default="project source files" />
    </project_attribute>

    <!--  Object directories -->

    <project_attribute
        name="object_dir"
        editor_page="Objects"
        description="The name of the directories in which the files generated by the compiler will be put. This include object files and any other file that your compiler generates as a by-product of the compilation. If you need multiple object directories, you must create multiple project files that import each other"
        label="Build directory">
        <string type="directory" default="." />
    </project_attribute>

    <project_attribute
        name="exec_dir"
        editor_page="Objects"
        description="Directory in which the executable will be copied. By default, this is the same as the object directory, and doesn't need to be further specified"
        label="Exec directory"
        omit_if_default="true">
        <string type="directory" default="(same as build directory)" />
    </project_attribute>

    <!--  Main units -->

    <project_attribute
        name="main"
        editor_page="Main files"
        editor_section="Main files"
        list="true"
        description="List of source files that contain the application's entry point. These units will appear in the Build menu, so that you can easily share a single project hierarchy to build a whole set of applications"
        label=""
        base_name_only="true" >
        <string type="file" />
   </project_attribute>

   <project_attribute
       name="executable_suffix"
       package="builder"
       editor_page="Main files"
       label="Default suffix"
       description="The default suffix for executables generated by the builder. This default can be overriden by modifying the list of executable names below.">
       <string />
   </project_attribute>

   <project_attribute
       name="executable"
       package="Builder"
       editor_page="Main files"
       editor_section="Executable names"
       description="Name of the executable generated when compiling each of the main units"
       case_sensitive_index="true"
       label="">
       <index attribute="main">
          <string default="(same as main unit, minus extension)"/>
       </index>
   </project_attribute>

   <project_attribute
       name="library_name"
       editor_page="Library"
       editor_section="General"
       label="Library Name"
       hide_in="wizard"
       description="Name of the library that will contain all the object files from this project. You must chose a name which is valid for your platform.">
       <string />
   </project_attribute>

   <project_attribute
       name="library_dir"
       editor_page="Library"
       editor_section="General"
       label="Library Directory"
       hide_in="wizard"
       description="Directory in which the library will be copied as a result of the compilation. Some extra files will be copied in this directory as well, for instance the ALI file for Ada sources. This directory must be different from the object directory">
       <string type="directory"/>
   </project_attribute>

   <project_attribute
       name="library_kind"
       editor_page="Library"
       editor_section="General"
       label="Library Kind"
       hide_in="wizard"
       description="The kind of library that should be built. If you need to build different kinds of libraries, it is recommend to select a different library directory for each, since the object files might need to be compiled differently in each case">
       <choice default="true">static</choice>
       <choice>dynamic</choice>
   </project_attribute>

   <project_attribute
       name="library_version"
       editor_page="Library"
       editor_section="General"
       label="Version"
       hide_in="wizard"
       description="The version of the library. This is a platform depend string, and you should make sure it is valid for your platform.">
       <string />
   </project_attribute>

   <project_attribute
       name="library_interface"
       editor_page="Library"
       editor_section="Standalone library"
       label="Interface" 
       hide_in="wizard"
       description="This attribute is optional. If it is defined, it should contain the list of units that are the public interface to the library. All other units will not be accessible by users of the library. If this attribute is defined, the library will be a standalone library."
       list="true">
       <string type="file" />
   </project_attribute>

   <project_attribute
       name="library_auto_init"
       editor_page="Library"
       editor_section="Standalone library"
       label="Auto Init"
       hide_in="wizard"
       description="If this attribute is true, then the standalone library will be automatically initialized when part of the project. If this attribute is false, you need to call some special elaboration code yourself. You must define the interface to the library as well.">
       <choice default="true">True</choice>
       <choice>False</choice>
   </project_attribute>

   <project_attribute
       name="library_src_dir"
       editor_page="Library"
       editor_section="Standalone library"
       label="Source directory"
       hide_in="wizard"
       description="The directory in which the sources required for Ada clients of the library will be copied. This include public interfaces, as well as bodies for inline subprograms,... This directory can be the same as the library directory, but must be different from the object directory">
       <string type="directory" />
   </project_attribute>

</custom>
