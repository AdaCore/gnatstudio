<?xml version="1.0"?>

<!--  This file adds support for cvs -->

<cvs_support>

   <!---------------->
   <!-- CVS status -->
   <!---------------->

   <action name="generic_cvs_status" show-command="true" output="none">
      <shell output="">echo "Querying status for $2-"</shell>
      <external>cvs status "$2-"</external>
      <shell>VCS.status_parse "Custom CVS" "%1" "$1" FALSE</shell>
   </action>

   <!-------------------->
   <!-- CVS status dir -->
   <!-------------------->

   <action name="generic_cvs_status_dir" show-command="true" output="none">
      <shell output="">echo "Querying status for directory:"</shell>
      <shell output="">pwd</shell>
      <external>cvs status .</external>
      <shell>VCS.status_parse "Custom CVS" "%1" "$1" FALSE</shell>
   </action>

   <!------------------>
   <!-- CVS annotate -->
   <!------------------>

   <action name="generic_cvs_annotate" show-command="true" output="">
      <shell>echo "Querying annotations for $1"</shell>
      <external output="none">cvs annotate "$1"</external>
      <shell output="none">VCS.annotations_parse "Custom CVS" "$1" "%1"</shell>
   </action>

   <!---------------------->
   <!-- CVS local status -->
   <!---------------------->

   <action name="generic_cvs_local_status" show-command="true" output="none">
      <shell>Editor.get_buffer "./CVS/Entries"</shell>
      <shell>VCS.status_parse "Custom CVS" "%1" FALSE TRUE</shell>
   </action>

   <!---------------->
   <!-- CVS commit -->
   <!---------------->

   <action name="generic_cvs_commit" show-command="true" output="none">
      <shell output="">echo "Committing files $2-"</shell>
      <shell>dump "$1" TRUE</shell>
      <external>cvs commit -F "%1" "$2-"</external>
      <shell>delete "%2"</shell>
      <shell>Hook "file_changed_on_disk"</shell>
      <shell>Hook.run %1 null</shell>
   </action>

   <!------------->
   <!-- CVS add -->
   <!------------->

   <action name="generic_cvs_add" show-command="true" output="none">
      <shell output="">echo "adding files $2-"</shell>
      <external>cvs add "$2-"</external>
      <shell>dump "$1" TRUE</shell>
      <external>cvs commit -F "%1" "$2-"</external>
      <shell>delete "%2"</shell>
   </action>

   <!---------------->
   <!-- CVS remove -->
   <!---------------->

   <!-- ??? "delete" should work on multiple files>

   <action name="generic_cvs_remove" show-command="true" output="none">
      <shell output="">echo "removing files $2-"</shell>
      <shell>delete "$2-"</shell>
      <external>cvs remove "$2-"</external>
      <shell>dump "$1" TRUE</shell>
      <external>cvs commit -F "%1" "$2-"</external>
      <shell>delete "%2"</shell>
   </action>

   <!----------------->
   <!-- CVS history -->
   <!----------------->

   <!--  ??? Must find a way to query whole history>

   <action name="generic_cvs_history" show-command="true" output="none">
      <shell output="">echo "Querying history for $2"</shell>
      <external>cvs log -N -r$1 "$2"</external>
      <shell>dump "%1" TRUE</shell>
      <shell>Editor.edit "%1"</shell>
      <shell>MDI.split_vertically TRUE</shell>
      <shell>delete "%2"</shell>
   </action>

   <!---------------->
   <!-- CVS update -->
   <!---------------->

   <action name="generic_cvs_update" show-command="true" output="none">
      <external output="">cvs update "$*"</external>
      <shell>Hook "file_changed_on_disk"</shell>
      <shell>Hook.run %1 null</shell>
   </action>

   <!-------------->
   <!-- CVS diff -->
   <!-------------->

   <action name="generic_cvs_diff_head" show-command="true" output="none">
      <external>cvs -f diff -rHEAD "$1"</external>

      <on-failure>
        <shell>dump "%1" TRUE</shell>
        <shell>File "%1"</shell>
        <shell>File "$1"</shell>
        <shell>Hook "diff_action_hook"</shell>
        <shell>Hook.run %1 null %2 %3</shell>
        <shell>delete "%5"</shell>
      </on-failure>
      <shell>MDI.dialog "No differences found."</shell>
   </action>

   <action name="generic_cvs_diff" show-command="true" output="none">
      <external>cvs -f diff -r $1 "$2"</external>

      <on-failure>
        <shell>dump "%1" TRUE</shell>
        <shell>File "%1"</shell>
        <shell>File "$2"</shell>
        <shell>Hook "diff_action_hook"</shell>
        <shell>Hook.run %1 null %2 %3</shell>
        <shell>delete "%5"</shell>
      </on-failure>
      <shell>MDI.dialog "No differences found."</shell>
   </action>

   <action name="generic_cvs_diff2" show-command="true" output="none">
      <external>cvs -q update -p -r$2 "$3"</external>
      <shell>dump "%1" TRUE</shell>
      <shell>File "%1"</shell>

      <external>cvs -f diff -r$1 -r$2 "$3"</external>

      <on-failure>
        <shell>dump "%1" TRUE</shell>
        <shell>File "%1"</shell>
        <shell>Hook "diff_action_hook"</shell>
        <shell>Hook.run %1 null %5 %2</shell>
        <shell>delete "%4"</shell>
        <shell>delete "%8"</shell>
      </on-failure>
      <shell>MDI.dialog "No differences found."</shell>
   </action>

   <!-------------->
   <!-- CVS open -->
   <!-------------->

   <action name="generic_cvs_open" show-command="true" output="none">
      <shell output="">echo "Opening CVS files $2-"</shell>
      <external>cvs edit "$2-"</external>
      <shell>Hook "file_changed_on_disk"</shell>
      <shell>Hook.run %1 null</shell>
   </action>

   <!---------------->
   <!-- CVS revert -->
   <!---------------->

   <action name="generic_cvs_revert" show-command="true" output="none">
      <external output="">cvs update -C $*</external>
      <shell>Hook "file_changed_on_disk"</shell>
      <shell>Hook.run %1 null</shell>
   </action>

   <!--------->
   <!-- CVS -->
   <!--------->

   <vcs name="Custom CVS" absolute_names="FALSE">
      <status_files       action="generic_cvs_status"       label="Query status"/>
      <status_dir         action="generic_cvs_status_dir"   label="Query status for directory"/>
      <local_status_files action="generic_cvs_local_status" label="Local status"/>
      <open               action="generic_cvs_open"         label="Open"/>
      <update             action="generic_cvs_update"       label="Update"/>
      <commit             action="generic_cvs_commit"       label="Commit"/>
      <history            action="generic_cvs_history"      label="Query revision history"/>
      <annotate           action="generic_cvs_annotate"     label="Annotate"/>
      <add                action="generic_cvs_add"          label="Add"/>
      <remove             action="generic_cvs_remove"       label="Remove"/>
      <revert             action="generic_cvs_revert"       label="Revert"/>
      <diff_head          action="generic_cvs_diff_head"    label="Compare against head revision"/>
      <diff               action="generic_cvs_diff"         label="Compare against other revision"/>
      <diff2              action="generic_cvs_diff2"        label="Compare between two revisions"/>

      <status label="Up to date" stock="gps-vcs-up-to-date" />
      <status label="Locally modified" stock="gps-vcs-modified" />
      <status label="Needs merge" stock="gps-vcs-needs-merge" />
      <status label="Needs update" stock="gps-vcs-needs-update" />
      <status label="Had conflicts on merge" stock="gps-vcs-merge-conflicts" />

      <status_parser>
         <regexp>File: ([^\s]*)\s*Status: (.*?)\n\n *Working revision:\s*([^\s]*).*\n *Repository revision:\s*([^\s]*).*</regexp>

         <file_index>1</file_index>
         <status_index>2</status_index>
         <local_revision_index>3</local_revision_index>
         <repository_revision_index>4</repository_revision_index>

         <status_matcher label="Up to date">Up-to-date</status_matcher>
         <status_matcher label="Locally modified">Locally Modified</status_matcher>
         <status_matcher label="Needs update">Needs Patch</status_matcher>
         <status_matcher label="Needs merge">Needs Merge</status_matcher>
         <status_matcher label="Added">Locally Added</status_matcher>
         <status_matcher label="Removed">Locally Removed</status_matcher>
      </status_parser>

      <local_status_parser>
         <regexp>/(.+)/(.+?)/.*//(\n|$)</regexp>

         <file_index>1</file_index>
         <local_revision_index>2</local_revision_index>
      </local_status_parser>

      <annotations_parser>
         <regexp>(\d[^\s]*)[^\:]*\:(.*)(\n|$)</regexp>

         <repository_revision_index>1</repository_revision_index>
         <file_index>2</file_index>
      </annotations_parser>
   </vcs>

</cvs_support>
