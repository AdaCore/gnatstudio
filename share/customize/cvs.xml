<?xml version="1.0"?>

<!--  This file adds support for cvs -->

<cvs_support>

   <!---------------->
   <!-- CVS status -->
   <!---------------->

   <action name="generic_cvs_status" show-command="false" output="none">
      <shell>echo "Querying status for $2-"</shell>
      <external>cvs status $2-</external>
      <shell>VCS.status_parse "Custom CVS" "%1" $1 FALSE</shell>
   </action>

   <!------------------>
   <!-- CVS annotate -->
   <!------------------>

   <action name="generic_cvs_annotate" show-command="false" output="none">
      <shell>echo "Querying annotations for $1"</shell>
      <external>cvs annotate $1</external>
      <shell>VCS.annotations_parse "Custom CVS" "$1" "%1"</shell>
   </action>

   <!---------------------->
   <!-- CVS local status -->
   <!---------------------->

   <action name="generic_cvs_local_status" show-command="false" output="none">
      <shell>echo "Querying local status for $1"</shell>
      <shell>Editor.get_buffer ${1}/CVS/Entries</shell>
      <shell>VCS.status_parse "Custom CVS" "%1" FALSE TRUE</shell>
   </action>

   <!---------------->
   <!-- CVS commit -->
   <!---------------->

   <action name="generic_cvs_commit" show-command="false" output="">
      <shell>echo "Committing files $2-"</shell>
      <shell>dump "$1" TRUE</shell>
      <external>cvs commit -F %1 $2-</external>
      <shell>delete %2</shell>
   </action>

   <!----------------->
   <!-- CVS history -->
   <!----------------->

   <!--  ??? Must find a way to query whole history>

   <!--  ??? We should implement a command to split the current MDI>

   <action name="generic_cvs_history" show-command="false" output="">
      <shell output="">echo "Querying history for $2"</shell>
      <external>cvs log -N -r$1 $2</external>
      <shell>dump "%1" TRUE</shell>
      <shell>Editor.edit "%1"</shell>
      <shell>delete "%2"</shell>
   </action>

   <!---------------->
   <!-- CVS update -->
   <!---------------->

   <action name="generic_cvs_update">
      <external>cvs update $*</external>
   </action>

   <!-------------->
   <!-- CVS diff -->
   <!-------------->

   <action name="generic_cvs_diff_head">
      <external>cvs -f diff -rHEAD $1</external>

      <on-failure>
        <shell>dump "%1" TRUE</shell>
        <shell>File %1</shell>
        <shell>File $1</shell>
        <shell>Hook "diff_action_hook"</shell>
        <shell>Hook.run %1 null %2 %3</shell>
        <shell>delete %5</shell>
      </on-failure>
      <shell>echo No differences found</shell>
   </action>

   <!-------------->
   <!-- CVS open -->
   <!-------------->

   <action name="generic_cvs_open">
      <shell>echo "not implemented"</shell>
   </action>

   <!--------->
   <!-- CVS -->
   <!--------->

   <vcs name="Custom CVS" absolute_names="FALSE">
      <status           action="generic_cvs_status"       label="Query status"/>
      <local_status_dir action="generic_cvs_local_status" label="Local status"/>
      <open             action="generic_cvs_open"         label="Open"/>
      <update           action="generic_cvs_update"       label="Update"/>
      <commit           action="generic_cvs_commit"       label="Commit"/>
      <history          action="generic_cvs_history"      label="Query revision history"/>
      <annotate         action="generic_cvs_annotate"     label="Annotate"/>
      <add              action="generic_cvs_add"          label="Add"/>
      <remove           action="generic_cvs_remove"       label="Remove"/>
      <diff_head        action="generic_cvs_diff_head"    label="Compare against head rev."/>

      <status_parser>
         <regexp>File: ([^\s]*)\s*Status: (.*?)\n\n *Working revision:\t([^\t]*)\s.*\n *Repository revision:\t([^\t]*)\s.*</regexp>

         <file_index>1</file_index>
         <status_index>2</status_index>
         <local_revision_index>3</local_revision_index>
         <repository_revision_index>4</repository_revision_index>

         <up_to_date>Up-to-date</up_to_date>
         <locally_modified>Locally Modified</locally_modified>
         <needs_merge>Needs Merge</needs_merge>
         <needs_update>Needs Patch</needs_update>
         <removed>Locally Removed</removed>
         <added>Locally Added</added>
         <modified>Locally Modified</modified>
      </status_parser>

      <local_status_parser>
         <regexp>/(.*?)/(.*?)/.*//</regexp>

         <file_index>1</file_index>
         <local_revision_index>2</local_revision_index>
      </local_status_parser>

      <annotations_parser>
         <regexp>(\d[^\s]*)[^\:]*\:(.*)(\n|$)</regexp>

         <repository_revision_index>1</repository_revision_index>
         <file_index>2</file_index>
      </annotations_parser>
   </vcs>

</cvs_support>
