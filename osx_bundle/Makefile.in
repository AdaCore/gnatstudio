PREFIX:=$(PWD)
TOP:=$(PWD)
GTK_PREFIX=@GTK_PREFIX@
GPS_VERSION=@GPS_VERSION@
GPS_VERSION_NUM=$(shell echo $(GPS_VERSION) | sed -e 's/\([0-9.]*\).*/\1/')

APP:=GPS.app
PKG:=GPS-$(GPS_VERSION).pkg
DMG:=GPS-$(GPS_VERSION).dmg

contents=$(TOP)/_build/Applications/$(APP)/Contents
root=$(contents)/MacOS
bin=$(root)/bin
etc=$(root)/etc
lib=$(root)/lib
share=$(root)/share
inc=$(root)/include

all: pkg

pkg: $(PREFIX)/$(PKG)

dmg: $(PREFIX)/$(DMG)

clean:
	rm -rf *.dmg GPS.app

.PHONY: force

$(PREFIX)/$(DMG): $(PREFIX)/$(PKG)
# create dmg image
	cd $(PREFIX) && \
	  sh $(TOP)/scripts/dodmg.sh GPS $(GPS_VERSION) $(TOP)
	rm -f $(PREFIX)/$(PKG)

$(PREFIX)/$(PKG): force
	rm -rf _build

# prepare the OSX Application structure
	mkdir -p $(contents)
	mkdir -p $(root)
	mkdir -p $(lib)
	mkdir -p $(inc)
	mkdir -p $(etc)
	cp -r Resources $(contents)
	cp srcs/Info.plist $(contents)
	cp srcs/gps_bundle_main $(root)/gps

# install gps
	make -C .. install-strip prefix=$(root)
	find $(contents) -d -name .svn -exec rm -rf {} \;

# install gtk data files
	cp -r $(GTK_PREFIX)/lib/girepository-1.0 $(lib)
	cp -r $(GTK_PREFIX)/lib/gio $(lib)
	cp -r $(GTK_PREFIX)/lib/gdk-pixbuf-2.0 $(lib)
	cp -r $(GTK_PREFIX)/lib/gtk-3.0 $(lib)
	rm $(lib)/gdk-pixbuf-2.0/*/loaders.cache
	mkdir -p $(etc)/gtk-3.0
	cp srcs/settings.ini $(etc)/gtk-3.0/
	cp -r $(GTK_PREFIX)/etc/pango $(etc)

# install gtk binaries and libraries
	python ./scripts/install.py $(root) \
	  $(GTK_PREFIX)/bin/gdk-pixbuf-query-loaders \
	  $(bin)/gps_exe \
	  $(lib)/gdk-pixbuf-2.0/2.10.0/loaders/*.so \
	  $(GTK_PREFIX)/lib/libgirepository*.dylib \
	  $(GTK_PREFIX)/lib/libpyglib*.dylib

# install python run-time
	cp -r $(GTK_PREFIX)/lib/python2.7 $(lib)
	cp -r $(GTK_PREFIX)/include/python2.7 $(inc)

# cleanup and strip libraries and python run-time
	find $(lib) -name \*.dylib -exec strip -S - {} \;
	find $(lib) -name \*.py[co] -exec rm {} \;
	find $(lib) -name \*.la -exec rm {} \;

# share dir
	mkdir -p $(share)/themes
	cp -r $(GTK_PREFIX)/share/themes/* $(share)/themes/
	mkdir -p $(share)/locale
	-cp -r $(GTK_PREFIX)/share/locale/* $(share)/locale/
	mkdir -p $(share)/icons
	-cp -r $(GTK_PREFIX)/share/icons/* $(share)/icons/
	mkdir -p $(share)/glib-2.0
	-cp -r $(GTK_PREFIX)/share/glib-2.0/schemas $(share)/glib-2.0

# Now that the app has been created, let's package it
# The gps.app package
	pkgbuild --root _build/Applications \
	         --version $(GPS_VERSION_NUM) \
	         --identifier com.adacore.gps \
	         _build/gps.pkg

# The command line handling package
	mkdir -p _build/bin
	cp srcs/gps_command_line _build/bin/gps
	chmod a+x _build/bin/gps
	pkgbuild --root _build/bin \
	         --version $(GPS_VERSION_NUM) \
	         --identifier com.adacore.gpscmdlin \
	         _build/gpscmdlin.pkg

# The end product, allowing custom install
	mkdir -p _build/resources
	cp srcs/background.png _build/resources/background.png
	productbuild --distribution srcs/gps.dist \
	             --resources _build/resources \
	             --package-path _build \
	             $(PREFIX)/$(PKG)
	rm -rf _build

