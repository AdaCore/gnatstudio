------------------------------------------------------------------------------
--                                                                          --
--                         GNAT COMPILER COMPONENTS                         --
--                                                                          --
--                     Make_Harness_Window_Pkg.Callbacks                    --
--                                                                          --
--                                 B o d y                                  --
--                                                                          --
--                            $Revision$
--                                                                          --
--                Copyright (C) 2001 Ada Core Technologies, Inc.            --
--                                                                          --
-- GNAT is free software;  you can  redistribute it  and/or modify it under --
-- terms of the  GNU General Public License as published  by the Free Soft- --
-- ware  Foundation;  either version 2,  or (at your option) any later ver- --
-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --
-- for  more details.  You should have  received  a copy of the GNU General --
-- Public License  distributed with GNAT;  see file COPYING.  If not, write --
-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --
-- MA 02111-1307, USA.                                                      --
--                                                                          --
-- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --
--                                                                          --
------------------------------------------------------------------------------

with Gtk.Main; use Gtk.Main;
with Explorer_Window_Pkg; use Explorer_Window_Pkg;
with String_Utils; use String_Utils;
with Ada.Text_IO; use Ada.Text_IO;
with Ada.Characters.Handling; use Ada.Characters.Handling;

with Gtkada.Dialogs;          use Gtkada.Dialogs;
with GNAT.OS_Lib;             use GNAT.OS_Lib;

package body Make_Harness_Window_Pkg.Callbacks is
   --  Callbacks for main "AUnit_Make_Harness" window.  Template
   --  generated by Glade

   use Gtk.Arguments;

   ---------------------------------------
   -- On_Make_Harness_Window_Delete_Event --
   ---------------------------------------

   function On_Make_Harness_Window_Delete_Event
     (Object : access Gtk_Widget_Record'Class;
      Params : Gtk.Arguments.Gtk_Args) return Boolean
   is
   begin
      Main_Quit;
      return True;
   end On_Make_Harness_Window_Delete_Event;

   ---------------------------------
   -- On_Procedure_Entry_Activate --
   ---------------------------------

   procedure On_Procedure_Entry_Activate
     (Object : access Gtk_Entry_Record'Class)
   is
      --  Initialize and set default focus
      Win : Make_Harness_Window_Access
        := Make_Harness_Window_Access (Get_Toplevel (Object));
   begin
      Grab_Focus (Win.Ok);
   end On_Procedure_Entry_Activate;

   ----------------------------
   -- On_Name_Entry_Activate --
   ----------------------------

   procedure On_Name_Entry_Activate
     (Object : access Gtk_Entry_Record'Class)
   is
      Win : Make_Harness_Window_Access
        := Make_Harness_Window_Access (Get_Toplevel (Object));
   begin
      Grab_Focus (Win.Ok);
   end On_Name_Entry_Activate;

   -----------------------
   -- On_Browse_Clicked --
   -----------------------

   procedure On_Browse_Clicked
     (Object : access Gtk_Button_Record'Class)
   is
      --  Open explorer window to select suite
   begin
      if Explorer_Window.Directory /= null then
         Free (Explorer_Window.Directory);
      end if;
      Explorer_Window.Directory := new String' (".");
      Explorer_Window_Pkg.Fill (Explorer_Window);
      Show_All (Explorer_Window);
   end On_Browse_Clicked;

   -------------------
   -- On_Ok_Clicked --
   -------------------

   procedure On_Ok_Clicked
     (Object : access Gtk_Button_Record'Class)
   is
      --  Generate harness body source file.  Exit program if
      --  successful

      Win : Make_Harness_Window_Access
        := Make_Harness_Window_Access (Get_Toplevel (Object));
      File : File_Type;
      Procedure_Name : String := Get_Text (Win.Procedure_Entry);
      File_Name : String := Get_Text (Win.File_Name_Entry);
   begin
      if Procedure_Name /= ""
        and then File_Name /= ""

      then
         Ada_Case (Procedure_Name);
         Ada_Case (File_Name);

         if Make_Harness_Window.Suite_Name = null then
            Make_Harness_Window.Suite_Name := new String' ("");
         end if;

         if Is_Regular_File (To_File_Name (Procedure_Name) & ".adb") then
            if Message_Dialog
              ("File " & To_File_Name (Procedure_Name)
               & ".adb" & " exists. Overwrite?",
               Warning,
               Button_Yes or Button_No,
               Button_No,
               "",
               "Warning !") = Button_No
            then
               return;
            end if;
         end if;

         Ada.Text_IO.Create (File,
                             Out_File,
                             To_File_Name (Procedure_Name) & ".adb");
         Put_Line (File,
                   "with AUnit.Test_Runner;" & ASCII.LF
                   & "with " &
                   Make_Harness_Window.Suite_Name.all & ";"
                   & ASCII.LF
                   & ASCII.LF
                   & "procedure " & Procedure_Name & " is" & ASCII.LF
                   & ASCII.LF
                   & "   procedure Run is new AUnit.Test_Runner ("
                   & Make_Harness_Window.Suite_Name.all
                   & ");"
                   & ASCII.LF
                   & ASCII.LF
                   & "begin"  & ASCII.LF
                   & "   Run;" & ASCII.LF
                   & "end " & Procedure_Name & ";");

         Close (File);
         Put (To_Lower (Procedure_Name));
      end if;
      Main_Quit;
   end On_Ok_Clicked;

   -----------------------
   -- On_Cancel_Clicked --
   -----------------------

   procedure On_Cancel_Clicked
     (Object : access Gtk_Button_Record'Class)
   is
   begin
      Main_Quit;
   end On_Cancel_Clicked;

   ---------------------
   -- On_Help_Clicked --
   ---------------------

   procedure On_Help_Clicked
     (Object : access Gtk_Button_Record'Class)
   is
   begin
      null;
   end On_Help_Clicked;

end Make_Harness_Window_Pkg.Callbacks;
