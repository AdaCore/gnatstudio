
64-bit division
Asm operand has wrong form
ELSE not allowed here
ELSIF cannot appear after ELSE
ELSIF not allowed here
OR not allowed here
OUT parameter& not set before return
Priority_Specific_Dispatching at \{\:\# incompatible with Locking_Policy at \{
Priority_Specific_Dispatching at \{\:\# incompatible with Task_Dispatching_Policy at \{
Unchecked_Union may not have empty component list
WHEN not allowed here
a range is not a valid discriminant constraint
abort may take time to complete\?
access definition not allowed in formal object declaration
access discriminant not allowed
access-to-constant operand type not allowed
access-to-protected-subprogram types not yet supported
accessibility check failure
actual for & must
actual for& must be a variable
actual subtype must be constrained
actual subtype must be unconstrained
ad errors, must be fixed, and recompiled
aliased component must be constrained
aliased component type must be constrained
alignment value must be positive
alignment value must be power of 2
all discriminants in an association must have the same type
ambiguous bounds in discrete range
ambiguous operand for concatenation
ambiguous operands for comparison
ambiguous operands for equality
ambiguous operands for membership
anonymous access type definition not allowed here
anonymous array definition not allowed here
anonymous record definitions are not permitted
are an Ada 2005 extension
argument for pragma% must be string literal
assignment to IN mode parameter not allowed
assignment to discriminant not allowed
assignment to loop parameter not allowed
at most one of terminate or delay alternative
atomic access to & cannot be guaranteed
atomic access to component of & cannot be guaranteed
attribute & may not be used in a subtype mark
attribute can only be renamed as
attribute must be a primitive dispatching operation
binary operator expected
body stub cannot appear here
both component types in a view conversion must be aliased, or neither
box notation only allowed with named notation
but the following files violate this restriction:
by_reference actual may be misaligned\?
call to & does not permit null string
call to & requires static string argument
can only omit ELSE expression in Boolean case
cannot add discriminants to untagged type
cannot allocate abstract object
cannot be imported \(local type is not constant\)
cannot compile configuration pragmas with gcc
cannot compile subprogram in file
cannot constrain type with unknown discriminants
cannot convert local pointer
cannot create gnat.adc
cannot eliminate subprogram
cannot exit from program unit or accept statement
cannot find body of generic package
cannot generate 'S'C'I'L
cannot instantiate a limited withed package
cannot instantiate& before body seen
cannot locate
cannot pass atomic argument to non-atomic formal
cannot pass volatile argument to non-volatile formal
cannot read gnat.adc
cannot resolve expression
cannot take reference to Atomic/Volatile object
change component clause to position component on word boundary
character not defined for }
child of an instance must be an instance or renaming
child unit allowed only at library level
child unit& hides compilation unit with the same name
child units not allowed
circular Instantiation
circular type definition
circular unit dependency
code statement can only appear in body of subprogram
compiled with different
compiled with different GNAT versions
compiled with different exception handling mechanisms
compiled with restriction No_Default_Initialization
compiled without restriction No_Default_Initialization
component has non-static size
component of unchecked union cannot be controlled
component of unchecked union cannot have tasks
component on bit offset spanning more than two words not supported
component subtypes must statically match
component type of a view conversion cannot be private, tagged, or volatile
concatenation not available for limited array
conditional expression is an Ada extension
constant declaration requires initialization expression
conversion between unrelated limited array types not allowed
current instance attribute must appear alone
current instance prefix must be a direct name
decimal fixed type not allowed
declaration expected
declaration hides
delta expression must be positive
dereference must not be of an incomplete type
descriptor mechanism for parameter not permitted
designated type of actual does not match that of formal
digit expected
digits value must be greater than zero
discrete type required for index
discrete type required for range
discriminant & does not correspond to ancestor discriminant
discriminant cannot constrain scalar type
discriminant has deeper accessibility level than target
discriminant must appear alone as a direct name
discriminant part not allowed in protected body
disk full writing gnat.adc
division by zero
duplicate entry body
duplicate generic body
elaboration circularity detected
entry call required in select statement
enumeration type required, found
error in inlined body
error in non-remote access type
error writing gnat.adc
exception handler not permitted here
exception handlers in accept not allowed
expect [\w]+ name in renaming
expect anonymous access type in object renaming
expect entity name in renaming declaration
expect expression for entry index
expect range constraint for discrete type
expect subtype of }
expect valid formal access definition
expect valid subprogram name as default
expect variable in call to&
expected SEPARATE subunit, found child unit
expecting generic type definition here
exponentiation not available for fixed point
expression raises exception, cannot be static
extension aggregate not allowed
file could not be successfully preprocessed
first bit cannot be negative
float value out of range, infinity will be generated
formal parameter& has anonymous access type
freeing `NOT NULL` object will raise Constraint_Error
full constant declaration appears too late
generic [\w]+ cannot be used as
generic formal of mode IN must not be of
generic instantiation cannot appear here
generic private child packages not permitted
generic units cannot be overloaded
gnatchop
has been modified and must be recompiled
has been modified and should be recompiled
has dynamic elaboration checks and with's
hidden by private with clause
identifier expected
illegal bound in discrete range
illegal component name
illegal context for call to function with limited result
illegal prefix for slice
illegal reading of out parameter
illegal use of generic function
in instantiation
incompatible component types for array conversion
incompatible index types for array conversion
incompatible number of dimensions for conversion
incompatible types for operator
incompatible types given in constraint
incompatible types in range
inconsistent interrupt states at
incorrect conversion of local operand to remote type
incorrect conversion of remote operand to local type
infinite recursion
initialization not allowed for `IN OUT` formals
initialization not allowed for limited types
instantiation error
instantiation of & within itself
integer type definition bounds out of range
invalid body for generic function
invalid body for generic procedure 
invalid constraint: type has no discriminant
invalid context for logical operation
invalid dereference of a remote access-to-class-wide value
invalid entry index in accept for simple entry
invalid exception name in renaming
invalid generic unit name
invalid kind of formal derived type
invalid loop name in exit statement
invalid prefix
invalid switch
invalid use of incomplete type
invalid use of subtype mark in expression or call
is a reserved word in Ada 2005
is an Ada 2005 extension
is hidden within declaration of instance
is never static
is not a component of
is not static constant
is obsolete and read-only
label not permitted in this context
last bit cannot be less than first bit minus one
left hand side of assignment must be a variable
library unit renaming not allowed
literal out of range of type Standard\.Character
literal out of range of type Standard\.Wide_Character
local name must be a subtype
maximum nesting level exceeded
may be null
may be raised at run time
may be referenced before it has a value
may raise Storage_Error
mechanism for & has already been set
membership test not applicable to cpp-class types
misaligned actual cannot be passed by reference
missing RETURN statement in function body
missing `END [\w]+;` for [\w]+\#\!`
missing argument for parameter
missing entry index in accept for entry family
missing index for entry family component
missing operand
mixed logical operators in expression
mixing [\w]+ and [\w]+ is not allowed, parentheses are required
mode conformance error in renaming
modular types not allowed
more than one value supplied for discriminant
multiple choice not allowed here
multiple default preprocessing data
must be compiled
must be recompiled
name in call is not a callable entity
name of formal subprogram must be a direct name
nested array aggregate expected
no IF for this THEN
no [\w]+ for this [\w]+
no [\w]+ for this `end [\w]+
no compilation units found
no entry declaration matches entry body
no legal interpretation for indexed component
no modular type available in this context
no selector& for
no source files written
no valid types for left-hand side for assignment
no visible subprogram matches specification
non-static function call
not declared in
only a subtype mark is allowed in a formal
only one ELSE part allowed
only one label allowed on block or loop
only one terminate alternative allowed
only pragmas allowed in configuration file
operator for type& is not declared in
operator symbol not allowed for generic subprogram
others choice not allowed here
overlapping priority ranges at \{\:\# and \{\:\#
package body cannot appear here
package& is hidden by declaration
position cannot be negative
positional association follows named one
positional parameter association not allowed after named one
positional parameters not allowed after named ones
possible infinite loop
possible missing instantiation of 'Text_'I'O.'
pragma% does not allow & argument
prefix is non-static array
prefix must statically denote a non-remote subprogram
prefix must statically denote a remote subprogram
prefix of protected procedure or entry call must be variable
prefix type for attribute is not static scalar subtype
premature derivation of incomplete type
premature usage of incomplete
premature usage of incomplete type
premature use of
premature use of type for derivation
previously given size is too small
private units not allowed
proper body expected
protected interface cannot inherit from
protected type cannot implement
range high bound too large for digits value
range low bound too small for digits value
range not allowed here
range too large for any predefined type
reason: pragma Elaborate in unit
reason: with clause
record not allowed in generic type definition
redefinition of package body
renamed unit must be a child unit of generic parent
renamed unit must be a library unit
renaming declaration cannot appear here
renaming of conversion only allowed for tagged types
run-time library configuration error
scalar type required for range
set notation is a language extension
shift functions are never static
should be recompiled
simultaneous visibility of the limited and unlimited views not allowed
size attribute is only static for static scalar type
slice cannot have more than one dimension
some but not all files compiled with Normalize_Scalars
static array attribute must be Length, First, or Last
static attribute must apply to array/scalar type
static conversion requires static scalar
static expression must have scalar or string type
string literal not available for private array
subtype declaration not allowed as generic parameter declaration
subtype indication expected
subtype mark required
subtype must statically match function result subtype
subtype name not allowed here
suggest using template with multiple instructions
symbol expected
synchronized interface cannot inherit from
target of goto statement is not reachable
target of goto statement must be a label
task discriminant not allowed
task has no entry with this name
task interface cannot inherit from
task type cannot implement
the only constraint allowed here is a range constraint
the renamed object is not access-to-constant
the renamed object is not access-to-variable
this line is longer than 32766 characters
this line is too long
too few discriminants given in constraint
too few subscripts in array reference
too many actuals in generic instantiation
too many arguments in call
too many arguments in call to
too many formals for attribute
too many instantiations
too many subscripts in entry reference
too many user-defined concatenations
triggering statement cannot be procedure call
triggering statement must be delay
type cannot be determined from context
type cannot derive from
type of allocator cannot be abstract
unconstrained allocation not allowed
unexpected relational operator
unfrozen subprogram cannot rename itself
unimplemented attribute
unknown discriminant not allowed
unknown discriminants not allowed for elementary types
unknown symbol
unmatched actual & in call
unrecognized attribute
unrecognized descriptor class name
unrecognized mechanism name
unsupported intrinsic subprogram call
upper half character not allowed
use -gnatX
use -gnatf for details
use clause not allowed in predefined spec
use of construct not allowed in compiler
value for discriminant & must be static
value of discriminant & is out of range
value outside permitted range
variable& is not modified in loop body
variable& is read but never assigned
variant record has no direct equivalent in C
view conversion between unrelated by reference array types not allowed
violates restriction No_Dependence
which has static elaboration checks
will be raised at run time
will be raised at run-time
within its scope, generic denotes its instance
would be legal in Ada 2005
wrong form for Unit_Name parameter of pragma%
wrong form for argument of pragma Eliminate
wrong interface conversion
wrong number of arguments for pragma
